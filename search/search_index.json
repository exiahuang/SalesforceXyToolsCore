{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduce SalesforcexytoolsCore is a python library for salesforce. It is base on simple-salesforce Sobject Record Management : sobject create, get, get_by_custom_id, update, delete Sobject Queries : query, query_more, search, query_allsearch Sobject Bulk action Run Apex Script Metadata Control : describeMetadata, listAllMetadata, getAllMetadataMap, listmeta, listFolder, retrieve, etc. Package.xml builder. Retrieve Metadata to memory, Retrieve Metadata zip file. ApexClass, Trigger, ApexComponent, ApexPage: create, update, delete, get Get Apex Log Run test class","title":"SalesforcexytoolsCore"},{"location":"#introduce","text":"SalesforcexytoolsCore is a python library for salesforce. It is base on simple-salesforce Sobject Record Management : sobject create, get, get_by_custom_id, update, delete Sobject Queries : query, query_more, search, query_allsearch Sobject Bulk action Run Apex Script Metadata Control : describeMetadata, listAllMetadata, getAllMetadataMap, listmeta, listFolder, retrieve, etc. Package.xml builder. Retrieve Metadata to memory, Retrieve Metadata zip file. ApexClass, Trigger, ApexComponent, ApexPage: create, update, delete, get Get Apex Log Run test class","title":"Introduce"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/","text":"Introduce SalesforcexytoolsCore is a python library for salesforce. It is base on simple-salesforce Sobject Record Management : sobject create, get, get_by_custom_id, update, delete Sobject Queries : query, query_more, search, query_allsearch Sobject Bulk action Run Apex Script Metadata Control : describeMetadata, listAllMetadata, getAllMetadataMap, listmeta, listFolder, retrieve, etc. Package.xml builder. Retrieve Metadata to memory, Retrieve Metadata zip file. ApexClass, Trigger, ApexComponent, ApexPage: create, update, delete, get Get Apex Log Run test class Requirement Python3 requests Install pip install SalesforcexytoolsCore Document SalesforceXyToolsCore JP Document Download PDF SalesforcexytoolsCore-python-library-for-salesforce(\u65e5\u672c\u8a9e).pdf About Author : Exia.Huang SalesforceXyTools HP Github Twitter Facebook Qiita Hatena\u306f\u3066\u306a\u30d6\u30ed\u30b0 Sample Source Sample Source apexclass-create.py apexclass-delete.py apexclass-update.py apexcomponent-create.py build-package-xml.py config.py describe-metadata.py download-attachments.py get-all-metadata-map.py get-apexlog.py list-all-metadata.py list-folders.py list-metadata.py package-type-list.py retrieve-metadata-to-memory.py retrieve-metadata-to-zip.py run-apex-script.py run-rest-api.py run-soql-queries.py run-testclass.py sobject-CURD.py trigger-create.py visualforce-create.py","title":"SalesforcexytoolsCore Introduce"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#introduce","text":"SalesforcexytoolsCore is a python library for salesforce. It is base on simple-salesforce Sobject Record Management : sobject create, get, get_by_custom_id, update, delete Sobject Queries : query, query_more, search, query_allsearch Sobject Bulk action Run Apex Script Metadata Control : describeMetadata, listAllMetadata, getAllMetadataMap, listmeta, listFolder, retrieve, etc. Package.xml builder. Retrieve Metadata to memory, Retrieve Metadata zip file. ApexClass, Trigger, ApexComponent, ApexPage: create, update, delete, get Get Apex Log Run test class","title":"Introduce"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#requirement","text":"Python3 requests","title":"Requirement"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#install","text":"pip install SalesforcexytoolsCore","title":"Install"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#document","text":"SalesforceXyToolsCore JP Document","title":"Document"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#download-pdf","text":"SalesforcexytoolsCore-python-library-for-salesforce(\u65e5\u672c\u8a9e).pdf","title":"Download PDF"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#about-author-exiahuang","text":"SalesforceXyTools HP Github Twitter Facebook Qiita Hatena\u306f\u3066\u306a\u30d6\u30ed\u30b0","title":"About Author : Exia.Huang"},{"location":"jp/001-SalesforceXyToolsCore-Introduce/#sample-source","text":"Sample Source apexclass-create.py apexclass-delete.py apexclass-update.py apexcomponent-create.py build-package-xml.py config.py describe-metadata.py download-attachments.py get-all-metadata-map.py get-apexlog.py list-all-metadata.py list-folders.py list-metadata.py package-type-list.py retrieve-metadata-to-memory.py retrieve-metadata-to-zip.py run-apex-script.py run-rest-api.py run-soql-queries.py run-testclass.py sobject-CURD.py trigger-create.py visualforce-create.py","title":"Sample Source"},{"location":"jp/002-apexclass-curd/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 ApexClass\u306e\u4f5c\u6210 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"createApexClass\"\"\" name = \"HelloWorld\" body = \"\"\"public class HelloWorld { private String mystr; }\"\"\" status_code, result = tooling_api.createApexClass(name, body) print(status_code) pprint.pprint(result) \u7d50\u679c\u78ba\u8a8d\uff1a {'errors': [], 'id': '01pxxxxxxxxxxxxxxxxx', 'success': True} ApexClass\u306e\u66f4\u65b0 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body) ApexClass\u306e\u524a\u9664 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body) \u305d\u306e\u4ed6 Trigger\u306e\u4f5c\u6210 \"\"\"createTrigger\"\"\" tooling_api.createTrigger(tableEnumOrId, name, body) VisualForce\u306e\u4f5c\u6210 \"\"\"createApexPage\"\"\" tooling_api.createApexPage(MasterLabel, name, markup) ApexComponent\u306e\u4f5c\u6210 \"\"\"createApexComponent\"\"\" tooling_api.createApexComponent(MasterLabel, name, markup)","title":"SalesforceXyToolsCore/Python\u4e0a\u3067ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664"},{"location":"jp/002-apexclass-curd/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664","title":"Topic"},{"location":"jp/002-apexclass-curd/#apexclass","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"createApexClass\"\"\" name = \"HelloWorld\" body = \"\"\"public class HelloWorld { private String mystr; }\"\"\" status_code, result = tooling_api.createApexClass(name, body) print(status_code) pprint.pprint(result) \u7d50\u679c\u78ba\u8a8d\uff1a {'errors': [], 'id': '01pxxxxxxxxxxxxxxxxx', 'success': True}","title":"ApexClass\u306e\u4f5c\u6210"},{"location":"jp/002-apexclass-curd/#apexclass_1","text":"from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body)","title":"ApexClass\u306e\u66f4\u65b0"},{"location":"jp/002-apexclass-curd/#apexclass_2","text":"from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body)","title":"ApexClass\u306e\u524a\u9664"},{"location":"jp/002-apexclass-curd/#_1","text":"","title":"\u305d\u306e\u4ed6"},{"location":"jp/002-apexclass-curd/#trigger","text":"\"\"\"createTrigger\"\"\" tooling_api.createTrigger(tableEnumOrId, name, body)","title":"Trigger\u306e\u4f5c\u6210"},{"location":"jp/002-apexclass-curd/#visualforce","text":"\"\"\"createApexPage\"\"\" tooling_api.createApexPage(MasterLabel, name, markup)","title":"VisualForce\u306e\u4f5c\u6210"},{"location":"jp/002-apexclass-curd/#apexcomponent","text":"\"\"\"createApexComponent\"\"\" tooling_api.createApexComponent(MasterLabel, name, markup)","title":"ApexComponent\u306e\u4f5c\u6210"},{"location":"jp/003-sobject-curd/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 ID\u3067Sobject\u306e\u53d6\u5f97 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Account\u3092\u53d6\u5f97\u3059\u308b from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) print('hello SalesforceXytoolsCore Test start') Account = soap_api.get_sobject(\"Account\") \"\"\" get a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.get(acc_id) pprint.pprint(account1) \u5916\u90e8\u30ad\u30fc\u3067Sobject\u306e\u53d6\u5f97 \"\"\" get a Sobject by External ID \"\"\" account1 = Account.get_by_custom_id('My_Custom_ID__c', 'custom_id') pprint.pprint(account1) ID\u3067Sobject\u306e\u66f4\u65b0 \"\"\" update a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.update(acc_id,{'LastName': 'sfdc'}) pprint.pprint(account1) ID\u3067Sobject\u306e\u524a\u9664 \"\"\" delete a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" Account.delete(acc_id)","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664"},{"location":"jp/003-sobject-curd/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664","title":"Topic"},{"location":"jp/003-sobject-curd/#idsobject","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Account\u3092\u53d6\u5f97\u3059\u308b from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) print('hello SalesforceXytoolsCore Test start') Account = soap_api.get_sobject(\"Account\") \"\"\" get a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.get(acc_id) pprint.pprint(account1)","title":"ID\u3067Sobject\u306e\u53d6\u5f97"},{"location":"jp/003-sobject-curd/#sobject","text":"\"\"\" get a Sobject by External ID \"\"\" account1 = Account.get_by_custom_id('My_Custom_ID__c', 'custom_id') pprint.pprint(account1)","title":"\u5916\u90e8\u30ad\u30fc\u3067Sobject\u306e\u53d6\u5f97"},{"location":"jp/003-sobject-curd/#idsobject_1","text":"\"\"\" update a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.update(acc_id,{'LastName': 'sfdc'}) pprint.pprint(account1)","title":"ID\u3067Sobject\u306e\u66f4\u65b0"},{"location":"jp/003-sobject-curd/#idsobject_2","text":"\"\"\" delete a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" Account.delete(acc_id)","title":"ID\u3067Sobject\u306e\u524a\u9664"},{"location":"jp/004-sfdc-get-apexlog/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Apex\u30ed\u30b0\u3092\u53d6\u5f97 Apex\u30ed\u30b0\u3092\u53d6\u5f97 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"get apex log\"\"\" log_id = '07LXXXXXXXXXXXXXXXXXXXX' result = tooling_api.getLog(log_id) pprint.pprint(result)","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Apex\u30ed\u30b0\u3092\u53d6\u5f97"},{"location":"jp/004-sfdc-get-apexlog/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Apex\u30ed\u30b0\u3092\u53d6\u5f97","title":"Topic"},{"location":"jp/004-sfdc-get-apexlog/#apex","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"get apex log\"\"\" log_id = '07LXXXXXXXXXXXXXXXXXXXX' result = tooling_api.getLog(log_id) pprint.pprint(result)","title":"Apex\u30ed\u30b0\u3092\u53d6\u5f97"},{"location":"jp/005-run-apexscript/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eApexScript\u3092\u5b9f\u884c\u3059\u308b ApexScript\u3092\u5b9f\u884c\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Apex Script \"\"\" apex_string = \"System.debug('hello world');\" debug_levels = { \"DB\": \"Info\", \"System\": \"DEBUG\", \"Workflow\": \"INFO\", \"Callout\": \"INFO\", \"Validation\": \"INFO\", \"Apex_Code\": \"DEBUG\", \"Apex_Profiling\": \"INFO\" } result = soap_api.execute_anonymous(apex_string, debug_levels) pprint.pprint(result) \u7d50\u679c\u30ed\u30b0\u3092\u78ba\u8a8d\uff1a {'debugLog': '42.0 ' 'APEX_CODE,DEBUG;APEX_PROFILING,INFO;CALLOUT,INFO;DB,INFO;SYSTEM,DEBUG;VALIDATION,INFO;WORKFLOW,INFO\\n' \"Execute Anonymous: System.debug('hello world');\\n\" '22:22:14.19 ' '()|USER_INFO|[EXTERNAL]|xxxxxxxxxxxxxxxxxxxxxxxxx|\u65e5\u672c\u6a19\u6e96\u6642|GMT+09:00\\n' '22:22:14.19 ()|EXECUTION_STARTED\\n' '22:22:14.19 ' '()|CODE_UNIT_STARTED|[EXTERNAL]|execute_anonymous_apex\\n' '22:22:14.19 ()|USER_DEBUG|[1]|DEBUG|hello world\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE\\n' '22:22:14.19 ()|LIMIT_USAGE_FOR_NS|(default)|\\n' ' Number of SOQL queries: 0 out of 100\\n' ' Number of query rows: 0 out of 50000\\n' ' Number of SOSL queries: 0 out of 20\\n' ' Number of DML statements: 0 out of 150\\n' ' Number of DML rows: 0 out of 10000\\n' ' Maximum CPU time: 0 out of 10000\\n' ' Maximum heap size: 0 out of 6000000\\n' ' Number of callouts: 0 out of 100\\n' ' Number of Email Invocations: 0 out of 10\\n' ' Number of future calls: 0 out of 50\\n' ' Number of queueable jobs added to the queue: 0 out of 50\\n' ' Number of Mobile Apex push calls: 0 out of 10\\n' '\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE_END\\n' '\\n' '22:22:14.19 ' '()|CODE_UNIT_FINISHED|execute_anonymous_apex\\n' '22:22:14.19 ()|EXECUTION_FINISHED\\n', 'success': True}","title":"SalesforceXyToolsCore/Python\u4e0a\u3067ApexScript\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/005-run-apexscript/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eApexScript\u3092\u5b9f\u884c\u3059\u308b","title":"Topic"},{"location":"jp/005-run-apexscript/#apexscript","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Apex Script \"\"\" apex_string = \"System.debug('hello world');\" debug_levels = { \"DB\": \"Info\", \"System\": \"DEBUG\", \"Workflow\": \"INFO\", \"Callout\": \"INFO\", \"Validation\": \"INFO\", \"Apex_Code\": \"DEBUG\", \"Apex_Profiling\": \"INFO\" } result = soap_api.execute_anonymous(apex_string, debug_levels) pprint.pprint(result)","title":"ApexScript\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/005-run-apexscript/#_1","text":"{'debugLog': '42.0 ' 'APEX_CODE,DEBUG;APEX_PROFILING,INFO;CALLOUT,INFO;DB,INFO;SYSTEM,DEBUG;VALIDATION,INFO;WORKFLOW,INFO\\n' \"Execute Anonymous: System.debug('hello world');\\n\" '22:22:14.19 ' '()|USER_INFO|[EXTERNAL]|xxxxxxxxxxxxxxxxxxxxxxxxx|\u65e5\u672c\u6a19\u6e96\u6642|GMT+09:00\\n' '22:22:14.19 ()|EXECUTION_STARTED\\n' '22:22:14.19 ' '()|CODE_UNIT_STARTED|[EXTERNAL]|execute_anonymous_apex\\n' '22:22:14.19 ()|USER_DEBUG|[1]|DEBUG|hello world\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE\\n' '22:22:14.19 ()|LIMIT_USAGE_FOR_NS|(default)|\\n' ' Number of SOQL queries: 0 out of 100\\n' ' Number of query rows: 0 out of 50000\\n' ' Number of SOSL queries: 0 out of 20\\n' ' Number of DML statements: 0 out of 150\\n' ' Number of DML rows: 0 out of 10000\\n' ' Maximum CPU time: 0 out of 10000\\n' ' Maximum heap size: 0 out of 6000000\\n' ' Number of callouts: 0 out of 100\\n' ' Number of Email Invocations: 0 out of 10\\n' ' Number of future calls: 0 out of 50\\n' ' Number of queueable jobs added to the queue: 0 out of 50\\n' ' Number of Mobile Apex push calls: 0 out of 10\\n' '\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE_END\\n' '\\n' '22:22:14.19 ' '()|CODE_UNIT_FINISHED|execute_anonymous_apex\\n' '22:22:14.19 ()|EXECUTION_FINISHED\\n', 'success': True}","title":"\u7d50\u679c\u30ed\u30b0\u3092\u78ba\u8a8d\uff1a"},{"location":"jp/006-run-soql-queries/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b \u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Soql Queries \"\"\" soql_string = \"SELECT Id, Name FROM User LIMIT 3\" result = soap_api.query(soql_string) pprint.pprint(result) \u7d50\u679c\u78ba\u8a8d OrderedDict([('totalSize', 3), ('done', True), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'Process Automated')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', '\u30b5\u30a4\u30c8\u30b2\u30b9\u30c8\u30e6\u30fc\u30b6')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'SFDC Exia')])])]) \u305d\u306e\u4ed6\u65b9\u6cd5 query_more soap_api.query_more(sobject_id) soap_api.query_more(\"/services/data/v43.0/query/sobject_id\", True) query_all\u3067\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b soap_api.query_all(\"SELECT Id, Email FROM Contact WHERE LastName = 'Jones'\") search soap_api.search(\"FIND {exia}\") quick_search soap_api.quick_search(\"exia\")","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/006-run-soql-queries/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b","title":"Topic"},{"location":"jp/006-run-soql-queries/#_1","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Soql Queries \"\"\" soql_string = \"SELECT Id, Name FROM User LIMIT 3\" result = soap_api.query(soql_string) pprint.pprint(result)","title":"\u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/006-run-soql-queries/#_2","text":"OrderedDict([('totalSize', 3), ('done', True), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'Process Automated')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', '\u30b5\u30a4\u30c8\u30b2\u30b9\u30c8\u30e6\u30fc\u30b6')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'SFDC Exia')])])])","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/006-run-soql-queries/#_3","text":"","title":"\u305d\u306e\u4ed6\u65b9\u6cd5"},{"location":"jp/006-run-soql-queries/#query_more","text":"soap_api.query_more(sobject_id) soap_api.query_more(\"/services/data/v43.0/query/sobject_id\", True)","title":"query_more"},{"location":"jp/006-run-soql-queries/#query_all","text":"soap_api.query_all(\"SELECT Id, Email FROM Contact WHERE LastName = 'Jones'\")","title":"query_all\u3067\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/006-run-soql-queries/#search","text":"soap_api.search(\"FIND {exia}\")","title":"search"},{"location":"jp/006-run-soql-queries/#quick_search","text":"soap_api.quick_search(\"exia\")","title":"quick_search"},{"location":"jp/007-run-testclass/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"run test class\"\"\" id_list = ['xxx', 'xxxx'] tooling_api.runTestSynchronous(id_list)","title":"SalesforceXyToolsCore/Python\u4e0a\u3067\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/007-run-testclass/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b","title":"Topic"},{"location":"jp/007-run-testclass/#_1","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"run test class\"\"\" id_list = ['xxx', 'xxxx'] tooling_api.runTestSynchronous(id_list)","title":"\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/008-run-rest-api/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9 Apexclass\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Rest API : query apexclass \"\"\" sel_string = \"Select Id, Name From ApexClass Limit 3\" params = {'q': sel_string} result = rest_api.restful('tooling/query', params) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d OrderedDict([('size', 3), ('totalSize', 3), ('done', True), ('queryLocator', None), ('entityTypeName', 'ApexClass'), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'OpportXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'DaoXXXXXXXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'ExiaXXXXXXXXXXXXX')])])]) ApexCodeCoverage\u30ab\u30d0\u30fc\u7387\u3092\u53d6\u5f97\u3059\u308b \"\"\" Run Rest API : query ApexCodeCoverage \"\"\" sel_string = \"SELECT Id, ApexTestClassId, TestMethodName, ApexClassorTriggerId, NumLinesCovered, NumLinesUncovered, Coverage FROM ApexCodeCoverage\" params = {'q': sel_string} result = rest_api.restful( path='tooling/query', params=params, method='GET' ) pprint.pprint(result) Sobjects\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b \"\"\" Run Rest API : search sobjects \"\"\" result = rest_api.call_rest( method='GET', path='/services/data/v37.0/sobjects', params={}, ) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d {'encoding': 'UTF-8', 'maxBatchSize': 200, 'sobjects': [ {'activateable': False, 'createable': True, 'custom': False, 'customSetting': False, 'deletable': True, 'deprecatedAndHidden': False, 'feedEnabled': True, 'keyPrefix': '006', 'label': 'Opportunity', 'labelPlural': 'Opportunities', 'layoutable': True, 'mergeable': False, 'mruEnabled': True, 'name': 'Opportunity', 'queryable': True, 'replicateable': True, 'retrieveable': True, 'searchable': True, 'triggerable': True, 'undeletable': True, 'updateable': True, 'urls': {'approvalLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/approvalLayouts', 'compactLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/compactLayouts', 'defaultValues': '/services/data/v37.0/sobjects/Opportunity/defaultValues?recordTypeId&fields', 'describe': '/services/data/v37.0/sobjects/Opportunity/describe', 'layouts': '/services/data/v37.0/sobjects/Opportunity/describe/layouts', 'listviews': '/services/data/v37.0/sobjects/Opportunity/listviews', 'quickActions': '/services/data/v37.0/sobjects/Opportunity/quickActions', 'rowTemplate': '/services/data/v37.0/sobjects/Opportunity/{ID}', 'sobject': '/services/data/v37.0/sobjects/Opportunity'}}, ................ ................ .....\u7701\u7565....... ................ ................ ] }","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9"},{"location":"jp/008-run-rest-api/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9","title":"Topic"},{"location":"jp/008-run-rest-api/#apexclass","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Rest API : query apexclass \"\"\" sel_string = \"Select Id, Name From ApexClass Limit 3\" params = {'q': sel_string} result = rest_api.restful('tooling/query', params) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d OrderedDict([('size', 3), ('totalSize', 3), ('done', True), ('queryLocator', None), ('entityTypeName', 'ApexClass'), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'OpportXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'DaoXXXXXXXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'ExiaXXXXXXXXXXXXX')])])])","title":"Apexclass\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/008-run-rest-api/#apexcodecoverage","text":"\"\"\" Run Rest API : query ApexCodeCoverage \"\"\" sel_string = \"SELECT Id, ApexTestClassId, TestMethodName, ApexClassorTriggerId, NumLinesCovered, NumLinesUncovered, Coverage FROM ApexCodeCoverage\" params = {'q': sel_string} result = rest_api.restful( path='tooling/query', params=params, method='GET' ) pprint.pprint(result)","title":"ApexCodeCoverage\u30ab\u30d0\u30fc\u7387\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/008-run-rest-api/#sobjects","text":"\"\"\" Run Rest API : search sobjects \"\"\" result = rest_api.call_rest( method='GET', path='/services/data/v37.0/sobjects', params={}, ) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d {'encoding': 'UTF-8', 'maxBatchSize': 200, 'sobjects': [ {'activateable': False, 'createable': True, 'custom': False, 'customSetting': False, 'deletable': True, 'deprecatedAndHidden': False, 'feedEnabled': True, 'keyPrefix': '006', 'label': 'Opportunity', 'labelPlural': 'Opportunities', 'layoutable': True, 'mergeable': False, 'mruEnabled': True, 'name': 'Opportunity', 'queryable': True, 'replicateable': True, 'retrieveable': True, 'searchable': True, 'triggerable': True, 'undeletable': True, 'updateable': True, 'urls': {'approvalLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/approvalLayouts', 'compactLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/compactLayouts', 'defaultValues': '/services/data/v37.0/sobjects/Opportunity/defaultValues?recordTypeId&fields', 'describe': '/services/data/v37.0/sobjects/Opportunity/describe', 'layouts': '/services/data/v37.0/sobjects/Opportunity/describe/layouts', 'listviews': '/services/data/v37.0/sobjects/Opportunity/listviews', 'quickActions': '/services/data/v37.0/sobjects/Opportunity/quickActions', 'rowTemplate': '/services/data/v37.0/sobjects/Opportunity/{ID}', 'sobject': '/services/data/v37.0/sobjects/Opportunity'}}, ................ ................ .....\u7701\u7565....... ................ ................ ] }","title":"Sobjects\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/009-sfdc-describe-metadata/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066\u3001DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u60c5\u5831\u306b\u306f Apex \u30af\u30e9\u30b9\u304a\u3088\u3073\u30c8\u30ea\u30ac\u3001\u30ab\u30b9\u30bf\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u6a19\u6e96\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ab\u30b9\u30bf\u30e0\u9805\u76ee\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u30bf\u30d6\u30bb\u30c3\u30c8\u3001\u304a\u3088\u3073\u4ed6\u306e\u591a\u304f\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u578b\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 DescribeMetadata\u306e\u5b9f\u884c Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" describeMetadata : This call retrieves the metadata that describes your organization. This information includes Apex classes and triggers, custom objects, custom fields on standard objects, tab sets that define an app, and many other metadata types. \"\"\" result = meta_api.describeMetadata() pprint.pprint(result) # print(json.dumps(result, indent=4)) \u7d50\u679c\u78ba\u8a8d OrderedDict([('metadataObjects', [OrderedDict([('directoryName', 'installedPackages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'installedPackage'), ('xmlName', 'InstalledPackage')]), OrderedDict([('childXmlNames', 'CustomLabel'), ('directoryName', 'labels'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'labels'), ('xmlName', 'CustomLabels')]), OrderedDict([('directoryName', 'staticresources'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'resource'), ('xmlName', 'StaticResource')]), OrderedDict([('directoryName', 'scontrols'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'scf'), ('xmlName', 'Scontrol')]), OrderedDict([('directoryName', 'certs'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'crt'), ('xmlName', 'Certificate')]), OrderedDict([('directoryName', 'aura'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'AuraDefinitionBundle')]), OrderedDict([('directoryName', 'lightningcomponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'LightningComponentBundle')]), OrderedDict([('directoryName', 'components'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'component'), ('xmlName', 'ApexComponent')]), OrderedDict([('directoryName', 'pages'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'page'), ('xmlName', 'ApexPage')]), OrderedDict([('directoryName', 'queues'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'queue'), ('xmlName', 'Queue')]), OrderedDict([('directoryName', 'CaseSubjectParticles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'CaseSubjectParticle'), ('xmlName', 'CaseSubjectParticle')]), OrderedDict([('directoryName', 'dataSources'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'dataSource'), ('xmlName', 'ExternalDataSource')]), OrderedDict([('directoryName', 'namedCredentials'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'namedCredential'), ('xmlName', 'NamedCredential')]), OrderedDict([('directoryName', 'externalServiceRegistrations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'externalServiceRegistration'), ('xmlName', 'ExternalServiceRegistration')]), OrderedDict([('directoryName', 'roles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'role'), ('xmlName', 'Role')]), OrderedDict([('directoryName', 'groups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'group'), ('xmlName', 'Group')]), OrderedDict([('directoryName', 'globalValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSet'), ('xmlName', 'GlobalValueSet')]), OrderedDict([('directoryName', 'standardValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSet'), ('xmlName', 'StandardValueSet')]), OrderedDict([('directoryName', 'customPermissions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customPermission'), ('xmlName', 'CustomPermission')]), OrderedDict([('childXmlNames', ['CustomField', 'Index', 'BusinessProcess', 'CompactLayout', 'RecordType', 'WebLink', 'ValidationRule', 'SharingReason', 'ListView', 'FieldSet']), ('directoryName', 'objects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'object'), ('xmlName', 'CustomObject')]), OrderedDict([('directoryName', 'reportTypes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'reportType'), ('xmlName', 'ReportType')]), OrderedDict([('directoryName', 'reports'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'report'), ('xmlName', 'Report')]), OrderedDict([('directoryName', 'dashboards'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'dashboard'), ('xmlName', 'Dashboard')]), OrderedDict([('directoryName', 'analyticSnapshots'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'snapshot'), ('xmlName', 'AnalyticSnapshot')]), OrderedDict([('directoryName', 'feedFilters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'feedFilter'), ('xmlName', 'CustomFeedFilter')]), OrderedDict([('directoryName', 'layouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'layout'), ('xmlName', 'Layout')]), OrderedDict([('directoryName', 'documents'), ('inFolder', 'true'), ('metaFile', 'true'), ('xmlName', 'Document')]), OrderedDict([('directoryName', 'weblinks'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'weblink'), ('xmlName', 'CustomPageWebLink')]), OrderedDict([('directoryName', 'letterhead'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'letter'), ('xmlName', 'Letterhead')]), OrderedDict([('directoryName', 'email'), ('inFolder', 'true'), ('metaFile', 'true'), ('suffix', 'email'), ('xmlName', 'EmailTemplate')]), OrderedDict([('directoryName', 'quickActions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'quickAction'), ('xmlName', 'QuickAction')]), OrderedDict([('directoryName', 'flexipages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flexipage'), ('xmlName', 'FlexiPage')]), OrderedDict([('directoryName', 'tabs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'tab'), ('xmlName', 'CustomTab')]), OrderedDict([('directoryName', 'customApplicationComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customApplicationComponent'), ('xmlName', 'CustomApplicationComponent')]), OrderedDict([('directoryName', 'applications'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'app'), ('xmlName', 'CustomApplication')]), OrderedDict([('directoryName', 'EmbeddedServiceConfig'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceConfig'), ('xmlName', 'EmbeddedServiceConfig')]), OrderedDict([('directoryName', 'EmbeddedServiceBranding'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceBranding'), ('xmlName', 'EmbeddedServiceBranding')]), OrderedDict([('directoryName', 'flows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flow'), ('xmlName', 'Flow')]), OrderedDict([('directoryName', 'flowDefinitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowDefinition'), ('xmlName', 'FlowDefinition')]), OrderedDict([('directoryName', 'eventSubscriptions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'subscription'), ('xmlName', 'EventSubscription')]), OrderedDict([('directoryName', 'eventDeliveries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delivery'), ('xmlName', 'EventDelivery')]), OrderedDict([('childXmlNames', ['WorkflowFieldUpdate', 'WorkflowKnowledgePublish', 'WorkflowTask', 'WorkflowAlert', 'WorkflowSend', 'WorkflowOutboundMessage', 'WorkflowRule']), ('directoryName', 'workflows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'workflow'), ('xmlName', 'Workflow')]), OrderedDict([('childXmlNames', 'AssignmentRule'), ('directoryName', 'assignmentRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'assignmentRules'), ('xmlName', 'AssignmentRules')]), OrderedDict([('childXmlNames', 'AutoResponseRule'), ('directoryName', 'autoResponseRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'autoResponseRules'), ('xmlName', 'AutoResponseRules')]), OrderedDict([('childXmlNames', 'EscalationRule'), ('directoryName', 'escalationRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'escalationRules'), ('xmlName', 'EscalationRules')]), OrderedDict([('directoryName', 'postTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'postTemplate'), ('xmlName', 'PostTemplate')]), OrderedDict([('directoryName', 'approvalProcesses'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'approvalProcess'), ('xmlName', 'ApprovalProcess')]), OrderedDict([('directoryName', 'homePageComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageComponent'), ('xmlName', 'HomePageComponent')]), OrderedDict([('directoryName', 'homePageLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageLayout'), ('xmlName', 'HomePageLayout')]), OrderedDict([('directoryName', 'objectTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'objectTranslation'), ('xmlName', 'CustomObjectTranslation')]), OrderedDict([('directoryName', 'globalValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSetTranslation'), ('xmlName', 'GlobalValueSetTranslation')]), OrderedDict([('directoryName', 'standardValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSetTranslation'), ('xmlName', 'StandardValueSetTranslation')]), OrderedDict([('directoryName', 'classes'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'cls'), ('xmlName', 'ApexClass')]), OrderedDict([('directoryName', 'triggers'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'trigger'), ('xmlName', 'ApexTrigger')]), OrderedDict([('directoryName', 'testSuites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'testSuite'), ('xmlName', 'ApexTestSuite')]), OrderedDict([('directoryName', 'profiles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profile'), ('xmlName', 'Profile')]), OrderedDict([('directoryName', 'permissionsets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'permissionset'), ('xmlName', 'PermissionSet')]), OrderedDict([('directoryName', 'customMetadata'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'md'), ('xmlName', 'CustomMetadata')]), OrderedDict([('directoryName', 'profilePasswordPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profilePasswordPolicy'), ('xmlName', 'ProfilePasswordPolicy')]), OrderedDict([('directoryName', 'profileSessionSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profileSessionSetting'), ('xmlName', 'ProfileSessionSetting')]), OrderedDict([('directoryName', 'datacategorygroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'datacategorygroup'), ('xmlName', 'DataCategoryGroup')]), OrderedDict([('directoryName', 'remoteSiteSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'remoteSite'), ('xmlName', 'RemoteSiteSetting')]), OrderedDict([('directoryName', 'cspTrustedSites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cspTrustedSite'), ('xmlName', 'CspTrustedSite')]), OrderedDict([('childXmlNames', 'MatchingRule'), ('directoryName', 'matchingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'matchingRule'), ('xmlName', 'MatchingRules')]), OrderedDict([('directoryName', 'duplicateRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'duplicateRule'), ('xmlName', 'DuplicateRule')]), OrderedDict([('directoryName', 'cleanDataServices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cleanDataService'), ('xmlName', 'CleanDataService')]), OrderedDict([('directoryName', 'authproviders'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'authprovider'), ('xmlName', 'AuthProvider')]), OrderedDict([('directoryName', 'eclair'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'geodata'), ('xmlName', 'EclairGeoData')]), OrderedDict([('directoryName', 'sites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'site'), ('xmlName', 'CustomSite')]), OrderedDict([('directoryName', 'channelLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'channelLayout'), ('xmlName', 'ChannelLayout')]), OrderedDict([('directoryName', 'contentassets'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'asset'), ('xmlName', 'ContentAsset')]), OrderedDict([('childXmlNames', ['SharingOwnerRule', 'SharingCriteriaRule']), ('directoryName', 'sharingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingRules'), ('xmlName', 'SharingRules')]), OrderedDict([('directoryName', 'sharingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingSet'), ('xmlName', 'SharingSet')]), OrderedDict([('directoryName', 'communities'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'community'), ('xmlName', 'Community')]), OrderedDict([('directoryName', 'ChatterExtensions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'ChatterExtension'), ('xmlName', 'ChatterExtension')]), OrderedDict([('directoryName', 'callCenters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'callCenter'), ('xmlName', 'CallCenter')]), OrderedDict([('directoryName', 'connectedApps'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'connectedApp'), ('xmlName', 'ConnectedApp')]), OrderedDict([('directoryName', 'appMenus'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'appMenu'), ('xmlName', 'AppMenu')]), OrderedDict([('directoryName', 'delegateGroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delegateGroup'), ('xmlName', 'DelegateGroup')]), OrderedDict([('directoryName', 'siteDotComSites'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'site'), ('xmlName', 'SiteDotCom')]), OrderedDict([('directoryName', 'networkBranding'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'networkBranding'), ('xmlName', 'NetworkBranding')]), OrderedDict([('directoryName', 'brandingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'brandingSet'), ('xmlName', 'BrandingSet')]), OrderedDict([('directoryName', 'flowCategories'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowCategory'), ('xmlName', 'FlowCategory')]), OrderedDict([('directoryName', 'lightningBolts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningBolt'), ('xmlName', 'LightningBolt')]), OrderedDict([('directoryName', 'lightningExperienceThemes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningExperienceTheme'), ('xmlName', 'LightningExperienceTheme')]), OrderedDict([('directoryName', 'samlssoconfigs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'samlssoconfig'), ('xmlName', 'SamlSsoConfig')]), OrderedDict([('directoryName', 'corsWhitelistOrigins'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'corsWhitelistOrigin'), ('xmlName', 'CorsWhitelistOrigin')]), OrderedDict([('directoryName', 'actionLinkGroupTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'actionLinkGroupTemplate'), ('xmlName', 'ActionLinkGroupTemplate')]), OrderedDict([('directoryName', 'transactionSecurityPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'transactionSecurityPolicy'), ('xmlName', 'TransactionSecurityPolicy')]), OrderedDict([('directoryName', 'synonymDictionaries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'synonymDictionary'), ('xmlName', 'SynonymDictionary')]), OrderedDict([('directoryName', 'pathAssistants'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'pathAssistant'), ('xmlName', 'PathAssistant')]), OrderedDict([('directoryName', 'LeadConvertSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'LeadConvertSetting'), ('xmlName', 'LeadConvertSettings')]), OrderedDict([('directoryName', 'cachePartitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cachePartition'), ('xmlName', 'PlatformCachePartition')]), OrderedDict([('directoryName', 'topicsForObjects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'topicsForObjects'), ('xmlName', 'TopicsForObjects')]), OrderedDict([('directoryName', 'emailservices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'xml'), ('xmlName', 'EmailServicesFunction')]), OrderedDict([('directoryName', 'settings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'settings'), ('xmlName', 'Settings')])]), ('organizationNamespace', None), ('partialSaveAllowed', 'true'), ('testRequired', 'false')])","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/009-sfdc-describe-metadata/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066\u3001DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u60c5\u5831\u306b\u306f Apex \u30af\u30e9\u30b9\u304a\u3088\u3073\u30c8\u30ea\u30ac\u3001\u30ab\u30b9\u30bf\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u6a19\u6e96\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ab\u30b9\u30bf\u30e0\u9805\u76ee\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u30bf\u30d6\u30bb\u30c3\u30c8\u3001\u304a\u3088\u3073\u4ed6\u306e\u591a\u304f\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u578b\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002","title":"Topic"},{"location":"jp/009-sfdc-describe-metadata/#describemetadata","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" describeMetadata : This call retrieves the metadata that describes your organization. This information includes Apex classes and triggers, custom objects, custom fields on standard objects, tab sets that define an app, and many other metadata types. \"\"\" result = meta_api.describeMetadata() pprint.pprint(result) # print(json.dumps(result, indent=4))","title":"DescribeMetadata\u306e\u5b9f\u884c"},{"location":"jp/009-sfdc-describe-metadata/#_1","text":"OrderedDict([('metadataObjects', [OrderedDict([('directoryName', 'installedPackages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'installedPackage'), ('xmlName', 'InstalledPackage')]), OrderedDict([('childXmlNames', 'CustomLabel'), ('directoryName', 'labels'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'labels'), ('xmlName', 'CustomLabels')]), OrderedDict([('directoryName', 'staticresources'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'resource'), ('xmlName', 'StaticResource')]), OrderedDict([('directoryName', 'scontrols'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'scf'), ('xmlName', 'Scontrol')]), OrderedDict([('directoryName', 'certs'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'crt'), ('xmlName', 'Certificate')]), OrderedDict([('directoryName', 'aura'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'AuraDefinitionBundle')]), OrderedDict([('directoryName', 'lightningcomponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'LightningComponentBundle')]), OrderedDict([('directoryName', 'components'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'component'), ('xmlName', 'ApexComponent')]), OrderedDict([('directoryName', 'pages'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'page'), ('xmlName', 'ApexPage')]), OrderedDict([('directoryName', 'queues'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'queue'), ('xmlName', 'Queue')]), OrderedDict([('directoryName', 'CaseSubjectParticles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'CaseSubjectParticle'), ('xmlName', 'CaseSubjectParticle')]), OrderedDict([('directoryName', 'dataSources'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'dataSource'), ('xmlName', 'ExternalDataSource')]), OrderedDict([('directoryName', 'namedCredentials'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'namedCredential'), ('xmlName', 'NamedCredential')]), OrderedDict([('directoryName', 'externalServiceRegistrations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'externalServiceRegistration'), ('xmlName', 'ExternalServiceRegistration')]), OrderedDict([('directoryName', 'roles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'role'), ('xmlName', 'Role')]), OrderedDict([('directoryName', 'groups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'group'), ('xmlName', 'Group')]), OrderedDict([('directoryName', 'globalValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSet'), ('xmlName', 'GlobalValueSet')]), OrderedDict([('directoryName', 'standardValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSet'), ('xmlName', 'StandardValueSet')]), OrderedDict([('directoryName', 'customPermissions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customPermission'), ('xmlName', 'CustomPermission')]), OrderedDict([('childXmlNames', ['CustomField', 'Index', 'BusinessProcess', 'CompactLayout', 'RecordType', 'WebLink', 'ValidationRule', 'SharingReason', 'ListView', 'FieldSet']), ('directoryName', 'objects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'object'), ('xmlName', 'CustomObject')]), OrderedDict([('directoryName', 'reportTypes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'reportType'), ('xmlName', 'ReportType')]), OrderedDict([('directoryName', 'reports'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'report'), ('xmlName', 'Report')]), OrderedDict([('directoryName', 'dashboards'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'dashboard'), ('xmlName', 'Dashboard')]), OrderedDict([('directoryName', 'analyticSnapshots'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'snapshot'), ('xmlName', 'AnalyticSnapshot')]), OrderedDict([('directoryName', 'feedFilters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'feedFilter'), ('xmlName', 'CustomFeedFilter')]), OrderedDict([('directoryName', 'layouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'layout'), ('xmlName', 'Layout')]), OrderedDict([('directoryName', 'documents'), ('inFolder', 'true'), ('metaFile', 'true'), ('xmlName', 'Document')]), OrderedDict([('directoryName', 'weblinks'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'weblink'), ('xmlName', 'CustomPageWebLink')]), OrderedDict([('directoryName', 'letterhead'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'letter'), ('xmlName', 'Letterhead')]), OrderedDict([('directoryName', 'email'), ('inFolder', 'true'), ('metaFile', 'true'), ('suffix', 'email'), ('xmlName', 'EmailTemplate')]), OrderedDict([('directoryName', 'quickActions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'quickAction'), ('xmlName', 'QuickAction')]), OrderedDict([('directoryName', 'flexipages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flexipage'), ('xmlName', 'FlexiPage')]), OrderedDict([('directoryName', 'tabs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'tab'), ('xmlName', 'CustomTab')]), OrderedDict([('directoryName', 'customApplicationComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customApplicationComponent'), ('xmlName', 'CustomApplicationComponent')]), OrderedDict([('directoryName', 'applications'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'app'), ('xmlName', 'CustomApplication')]), OrderedDict([('directoryName', 'EmbeddedServiceConfig'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceConfig'), ('xmlName', 'EmbeddedServiceConfig')]), OrderedDict([('directoryName', 'EmbeddedServiceBranding'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceBranding'), ('xmlName', 'EmbeddedServiceBranding')]), OrderedDict([('directoryName', 'flows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flow'), ('xmlName', 'Flow')]), OrderedDict([('directoryName', 'flowDefinitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowDefinition'), ('xmlName', 'FlowDefinition')]), OrderedDict([('directoryName', 'eventSubscriptions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'subscription'), ('xmlName', 'EventSubscription')]), OrderedDict([('directoryName', 'eventDeliveries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delivery'), ('xmlName', 'EventDelivery')]), OrderedDict([('childXmlNames', ['WorkflowFieldUpdate', 'WorkflowKnowledgePublish', 'WorkflowTask', 'WorkflowAlert', 'WorkflowSend', 'WorkflowOutboundMessage', 'WorkflowRule']), ('directoryName', 'workflows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'workflow'), ('xmlName', 'Workflow')]), OrderedDict([('childXmlNames', 'AssignmentRule'), ('directoryName', 'assignmentRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'assignmentRules'), ('xmlName', 'AssignmentRules')]), OrderedDict([('childXmlNames', 'AutoResponseRule'), ('directoryName', 'autoResponseRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'autoResponseRules'), ('xmlName', 'AutoResponseRules')]), OrderedDict([('childXmlNames', 'EscalationRule'), ('directoryName', 'escalationRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'escalationRules'), ('xmlName', 'EscalationRules')]), OrderedDict([('directoryName', 'postTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'postTemplate'), ('xmlName', 'PostTemplate')]), OrderedDict([('directoryName', 'approvalProcesses'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'approvalProcess'), ('xmlName', 'ApprovalProcess')]), OrderedDict([('directoryName', 'homePageComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageComponent'), ('xmlName', 'HomePageComponent')]), OrderedDict([('directoryName', 'homePageLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageLayout'), ('xmlName', 'HomePageLayout')]), OrderedDict([('directoryName', 'objectTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'objectTranslation'), ('xmlName', 'CustomObjectTranslation')]), OrderedDict([('directoryName', 'globalValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSetTranslation'), ('xmlName', 'GlobalValueSetTranslation')]), OrderedDict([('directoryName', 'standardValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSetTranslation'), ('xmlName', 'StandardValueSetTranslation')]), OrderedDict([('directoryName', 'classes'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'cls'), ('xmlName', 'ApexClass')]), OrderedDict([('directoryName', 'triggers'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'trigger'), ('xmlName', 'ApexTrigger')]), OrderedDict([('directoryName', 'testSuites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'testSuite'), ('xmlName', 'ApexTestSuite')]), OrderedDict([('directoryName', 'profiles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profile'), ('xmlName', 'Profile')]), OrderedDict([('directoryName', 'permissionsets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'permissionset'), ('xmlName', 'PermissionSet')]), OrderedDict([('directoryName', 'customMetadata'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'md'), ('xmlName', 'CustomMetadata')]), OrderedDict([('directoryName', 'profilePasswordPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profilePasswordPolicy'), ('xmlName', 'ProfilePasswordPolicy')]), OrderedDict([('directoryName', 'profileSessionSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profileSessionSetting'), ('xmlName', 'ProfileSessionSetting')]), OrderedDict([('directoryName', 'datacategorygroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'datacategorygroup'), ('xmlName', 'DataCategoryGroup')]), OrderedDict([('directoryName', 'remoteSiteSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'remoteSite'), ('xmlName', 'RemoteSiteSetting')]), OrderedDict([('directoryName', 'cspTrustedSites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cspTrustedSite'), ('xmlName', 'CspTrustedSite')]), OrderedDict([('childXmlNames', 'MatchingRule'), ('directoryName', 'matchingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'matchingRule'), ('xmlName', 'MatchingRules')]), OrderedDict([('directoryName', 'duplicateRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'duplicateRule'), ('xmlName', 'DuplicateRule')]), OrderedDict([('directoryName', 'cleanDataServices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cleanDataService'), ('xmlName', 'CleanDataService')]), OrderedDict([('directoryName', 'authproviders'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'authprovider'), ('xmlName', 'AuthProvider')]), OrderedDict([('directoryName', 'eclair'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'geodata'), ('xmlName', 'EclairGeoData')]), OrderedDict([('directoryName', 'sites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'site'), ('xmlName', 'CustomSite')]), OrderedDict([('directoryName', 'channelLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'channelLayout'), ('xmlName', 'ChannelLayout')]), OrderedDict([('directoryName', 'contentassets'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'asset'), ('xmlName', 'ContentAsset')]), OrderedDict([('childXmlNames', ['SharingOwnerRule', 'SharingCriteriaRule']), ('directoryName', 'sharingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingRules'), ('xmlName', 'SharingRules')]), OrderedDict([('directoryName', 'sharingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingSet'), ('xmlName', 'SharingSet')]), OrderedDict([('directoryName', 'communities'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'community'), ('xmlName', 'Community')]), OrderedDict([('directoryName', 'ChatterExtensions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'ChatterExtension'), ('xmlName', 'ChatterExtension')]), OrderedDict([('directoryName', 'callCenters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'callCenter'), ('xmlName', 'CallCenter')]), OrderedDict([('directoryName', 'connectedApps'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'connectedApp'), ('xmlName', 'ConnectedApp')]), OrderedDict([('directoryName', 'appMenus'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'appMenu'), ('xmlName', 'AppMenu')]), OrderedDict([('directoryName', 'delegateGroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delegateGroup'), ('xmlName', 'DelegateGroup')]), OrderedDict([('directoryName', 'siteDotComSites'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'site'), ('xmlName', 'SiteDotCom')]), OrderedDict([('directoryName', 'networkBranding'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'networkBranding'), ('xmlName', 'NetworkBranding')]), OrderedDict([('directoryName', 'brandingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'brandingSet'), ('xmlName', 'BrandingSet')]), OrderedDict([('directoryName', 'flowCategories'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowCategory'), ('xmlName', 'FlowCategory')]), OrderedDict([('directoryName', 'lightningBolts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningBolt'), ('xmlName', 'LightningBolt')]), OrderedDict([('directoryName', 'lightningExperienceThemes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningExperienceTheme'), ('xmlName', 'LightningExperienceTheme')]), OrderedDict([('directoryName', 'samlssoconfigs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'samlssoconfig'), ('xmlName', 'SamlSsoConfig')]), OrderedDict([('directoryName', 'corsWhitelistOrigins'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'corsWhitelistOrigin'), ('xmlName', 'CorsWhitelistOrigin')]), OrderedDict([('directoryName', 'actionLinkGroupTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'actionLinkGroupTemplate'), ('xmlName', 'ActionLinkGroupTemplate')]), OrderedDict([('directoryName', 'transactionSecurityPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'transactionSecurityPolicy'), ('xmlName', 'TransactionSecurityPolicy')]), OrderedDict([('directoryName', 'synonymDictionaries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'synonymDictionary'), ('xmlName', 'SynonymDictionary')]), OrderedDict([('directoryName', 'pathAssistants'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'pathAssistant'), ('xmlName', 'PathAssistant')]), OrderedDict([('directoryName', 'LeadConvertSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'LeadConvertSetting'), ('xmlName', 'LeadConvertSettings')]), OrderedDict([('directoryName', 'cachePartitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cachePartition'), ('xmlName', 'PlatformCachePartition')]), OrderedDict([('directoryName', 'topicsForObjects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'topicsForObjects'), ('xmlName', 'TopicsForObjects')]), OrderedDict([('directoryName', 'emailservices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'xml'), ('xmlName', 'EmailServicesFunction')]), OrderedDict([('directoryName', 'settings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'settings'), ('xmlName', 'Settings')])]), ('organizationNamespace', None), ('partialSaveAllowed', 'true'), ('testRequired', 'false')])","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/010-create-sfdc-package-xml/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210 Package.xml\u306e\u4f5c\u6210 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"buildPackageXml\"\"\" packagexml = meta_api.buildPackageXml() \u7d50\u679c\u78ba\u8a8d\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <types> <members>*</members> <name>InstalledPackage</name> </types> <types> <members>*</members> <name>CustomLabels</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>Account</members> <members>AccountChangeEvent</members> <members>AccountCleanInfo</members> <members>AccountContactRole</members> <members>AccountFeed</members> <members>AccountHistory</members> <members>AccountPartner</members> <members>AccountShare</members> <members>ActionLinkGroupTemplate</members> <members>ActionLinkTemplate</members> <members>ActivityHistory</members> <members>AdditionalNumber</members> <members>AggregateResult</members> .................... ........\u7701\u7565......... .................... <name>CustomObject</name> </types> <types> <members>unfiled$public</members> .................... ........\u7701\u7565......... .................... <members>unfiled$public/SupportCaseAssignmentNotification</members> <members>unfiled$public/SalesNewCustomerEmail</members> <members>unfiled$public/SupportCaseCreatedWebInquiries</members> <members>unfiled$public/SupportEscalatedCaseNotification</members> <members>unfiled$public/SupportSelfServiceResetPassword</members> <members>unfiled$public/MarketingProductInquiryResponse</members> <members>unfiled$public/SupportCaseCreatedPhoneInquiries</members> <members>unfiled$public/SUPPORTSelfServiceResetPasswordSAMPLE</members> <members>unfiled$public/SupportEscalatedCaseReassignment</members> <members>unfiled$public/SUPPORTSelfServiceNewCommentNotificationSAMPLE</members> <name>EmailTemplate</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>*</members> <name>TopicsForObjects</name> </types> <types> <members>*</members> <name>EmailServicesFunction</name> </types> <types> <members>*</members> <name>Settings</name> </types> <version>42.0</version> </Package> SFDC\u7d44\u7e54\u304b\u3089Package\u95a2\u3059\u308b\u30ea\u30b9\u30c8\u3092\u53d6\u5f97 \"\"\"packageTypeList\"\"\" print('>>>packageTypeList') pprint.pprint(meta_api.packageTypeList()) \u7d50\u679c\u78ba\u8a8d [{'members': ['*'], 'name': 'InstalledPackage'}, {'members': ['*'], 'name': 'CustomLabels'}, {'members': ['*'], 'name': 'StaticResource'}, .................... ........\u7701\u7565......... .................... {'members': ['*'], 'name': 'TopicsForObjects'}, {'members': ['*'], 'name': 'EmailServicesFunction'}, {'members': ['*'], 'name': 'Settings'}]","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210"},{"location":"jp/010-create-sfdc-package-xml/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210","title":"Topic"},{"location":"jp/010-create-sfdc-package-xml/#packagexml","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"buildPackageXml\"\"\" packagexml = meta_api.buildPackageXml() \u7d50\u679c\u78ba\u8a8d\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <types> <members>*</members> <name>InstalledPackage</name> </types> <types> <members>*</members> <name>CustomLabels</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>Account</members> <members>AccountChangeEvent</members> <members>AccountCleanInfo</members> <members>AccountContactRole</members> <members>AccountFeed</members> <members>AccountHistory</members> <members>AccountPartner</members> <members>AccountShare</members> <members>ActionLinkGroupTemplate</members> <members>ActionLinkTemplate</members> <members>ActivityHistory</members> <members>AdditionalNumber</members> <members>AggregateResult</members> .................... ........\u7701\u7565......... .................... <name>CustomObject</name> </types> <types> <members>unfiled$public</members> .................... ........\u7701\u7565......... .................... <members>unfiled$public/SupportCaseAssignmentNotification</members> <members>unfiled$public/SalesNewCustomerEmail</members> <members>unfiled$public/SupportCaseCreatedWebInquiries</members> <members>unfiled$public/SupportEscalatedCaseNotification</members> <members>unfiled$public/SupportSelfServiceResetPassword</members> <members>unfiled$public/MarketingProductInquiryResponse</members> <members>unfiled$public/SupportCaseCreatedPhoneInquiries</members> <members>unfiled$public/SUPPORTSelfServiceResetPasswordSAMPLE</members> <members>unfiled$public/SupportEscalatedCaseReassignment</members> <members>unfiled$public/SUPPORTSelfServiceNewCommentNotificationSAMPLE</members> <name>EmailTemplate</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>*</members> <name>TopicsForObjects</name> </types> <types> <members>*</members> <name>EmailServicesFunction</name> </types> <types> <members>*</members> <name>Settings</name> </types> <version>42.0</version> </Package>","title":"Package.xml\u306e\u4f5c\u6210"},{"location":"jp/010-create-sfdc-package-xml/#sfdcpackage","text":"\"\"\"packageTypeList\"\"\" print('>>>packageTypeList') pprint.pprint(meta_api.packageTypeList()) \u7d50\u679c\u78ba\u8a8d [{'members': ['*'], 'name': 'InstalledPackage'}, {'members': ['*'], 'name': 'CustomLabels'}, {'members': ['*'], 'name': 'StaticResource'}, .................... ........\u7701\u7565......... .................... {'members': ['*'], 'name': 'TopicsForObjects'}, {'members': ['*'], 'name': 'EmailServicesFunction'}, {'members': ['*'], 'name': 'Settings'}]","title":"SFDC\u7d44\u7e54\u304b\u3089Package\u95a2\u3059\u308b\u30ea\u30b9\u30c8\u3092\u53d6\u5f97"},{"location":"jp/011-sfdc-get-all-metadata-map/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002 \u30e1\u30bf\u30c7\u30fc\u30bf\u306eID,\u3000Type\u3092\u53d6\u5f97\u53ef\u80fd\u3067\u3059\u3002 \u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"getAllMetadataMap\"\"\" all_metadata_map = meta_api.getAllMetadataMap() pprint.pprint(all_metadata_map) \u7d50\u679c\u78ba\u8a8d {'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 } Metadata\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408 \"\"\"listAllMetadata \"\"\" for meta in meta_api.listAllMetadata(): pprint.pprint(meta) \u6307\u5b9a\u3057\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b \"\"\"listmeta\"\"\" query_option_list = [ { \"metadata_type\" : \"EmailFolder\", \"folder\" : \"\" }, { \"metadata_type\" : \"ApexClass\", \"folder\" : \"\" } ] listmeta_result = meta_api.listMetadata(query_option_list) print(len(listmeta_result)) for meta in listmeta_result: pprint.pprint(meta)","title":"SalesforceXyToolsCore/Python\u4e0a\u3067\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u3088\u3046"},{"location":"jp/011-sfdc-get-all-metadata-map/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002 \u30e1\u30bf\u30c7\u30fc\u30bf\u306eID,\u3000Type\u3092\u53d6\u5f97\u53ef\u80fd\u3067\u3059\u3002","title":"Topic"},{"location":"jp/011-sfdc-get-all-metadata-map/#metadata","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"getAllMetadataMap\"\"\" all_metadata_map = meta_api.getAllMetadataMap() pprint.pprint(all_metadata_map)","title":"\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/011-sfdc-get-all-metadata-map/#_1","text":"{'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 }","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/011-sfdc-get-all-metadata-map/#metadata_1","text":"\"\"\"listAllMetadata \"\"\" for meta in meta_api.listAllMetadata(): pprint.pprint(meta)","title":"Metadata\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408"},{"location":"jp/011-sfdc-get-all-metadata-map/#_2","text":"\"\"\"listmeta\"\"\" query_option_list = [ { \"metadata_type\" : \"EmailFolder\", \"folder\" : \"\" }, { \"metadata_type\" : \"ApexClass\", \"folder\" : \"\" } ] listmeta_result = meta_api.listMetadata(query_option_list) print(len(listmeta_result)) for meta in listmeta_result: pprint.pprint(meta)","title":"\u6307\u5b9a\u3057\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/012-sfdc-list-folders/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b \u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"listFolder\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") pprint.pprint(folders) \u7d50\u679c\u78ba\u8a8d {'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 } \u305d\u306e\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u30fc Salesforce \u306b\u306f\u3001\u73fe\u5728\u6b21\u306e 4 \u3064\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30d5\u30a9\u30eb\u30c0 \u30e1\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0 \u30ec\u30dd\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0 \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30d5\u30a9\u30eb\u30c0 Four folder types currently exist in Salesforce: Document folder Email folder Report folder Dashboard folder \u53d6\u5f97\u65b9\u6cd5\uff1a \"\"\"Email folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") \"\"\"Document folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Document\") \"\"\"Report folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Report\") \"\"\"Dashboard folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Dashboard\")","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/012-sfdc-list-folders/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b","title":"Topic"},{"location":"jp/012-sfdc-list-folders/#_1","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"listFolder\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") pprint.pprint(folders)","title":"\u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/012-sfdc-list-folders/#_2","text":"{'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 }","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/012-sfdc-list-folders/#_3","text":"Salesforce \u306b\u306f\u3001\u73fe\u5728\u6b21\u306e 4 \u3064\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30d5\u30a9\u30eb\u30c0 \u30e1\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0 \u30ec\u30dd\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0 \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30d5\u30a9\u30eb\u30c0 Four folder types currently exist in Salesforce: Document folder Email folder Report folder Dashboard folder \u53d6\u5f97\u65b9\u6cd5\uff1a \"\"\"Email folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") \"\"\"Document folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Document\") \"\"\"Report folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Report\") \"\"\"Dashboard folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Dashboard\")","title":"\u305d\u306e\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u30fc"},{"location":"jp/013-retrieve-all-metadata/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 \u30e1\u30ea\u30c3\u30c8 package.xml\u914d\u7f6e\u4e0d\u8981\u3001\u52d5\u7684\u306b\u751f\u6210 \u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u4e00\u62ec\u3067\u53d6\u5f97 Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"retrieve zip file\"\"\" meta_api.retrieveZip(\"./save_dir\",\"metadata-retrieve.zip\") \u7d50\u679c\u78ba\u8a8d\uff1a ls ./save_dir \u5206\u6790 \u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30ed\u30b8\u30c3\u30af retrieve() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3001\u975e\u540c\u671f\u7684\u306a\u53d6\u5f97\u3092\u958b\u59cb\u3059\u308b\u3068\u3001 AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002 id \u9805\u76ee\u306e\u5024\u3092\u30e1\u30e2\u3057\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002 checkRetrieveStatus() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3066\u3001\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u306e AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089 id \u5024\u3092\u6e21\u3057\u307e\u3059\u3002\u8fd4\u3055\u308c\u305f RetrieveResult \u306e done \u9805\u76ee\u306e\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002true \u306e\u5834\u5408\u3001\u30b3\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u3066\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u9032\u3080\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001 done \u9805\u76ee\u304c true \u306b\u306a\u308b\u307e\u3067\u3001\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u7e70\u308a\u8fd4\u3057\u3066 checkRetrieveStatus() \u3092\u518d\u5ea6\u30b3\u30fc\u30eb\u3057\u307e\u3059\u3002 \u524d\u306e\u30b9\u30c6\u30c3\u30d7\u306e checkRetrieveStatus() \u3078\u306e\u6700\u5f8c\u306e\u30b3\u30fc\u30eb\u3067\u8fd4\u3055\u308c\u305f RetrieveResult \u304b\u3089 zip \u30d5\u30a1\u30a4\u30eb ( zipFile \u9805\u76ee) \u304a\u3088\u3073\u4ed6\u306e\u5fc5\u8981\u306a\u9805\u76ee\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 retrieve\u30bf\u30b9\u30af\u3092\u958b\u59cb \u30bf\u30b9\u30af\u3092\u767a\u884c\u3059\u308b \"\"\"retrieve\"\"\" result = meta_api.startRetrieve() pprint.pprint(result) # print(result[\"done\"]) # print(result[\"id\"]) # print(result[\"state\"]) retrieve\u306e\u72b6\u6cc1\u3092\u78ba\u8a8d \u5ba3\u8a00\u7684\u306a\u30e1\u30bf\u30c7\u30fc\u30bf\u30b3\u30fc\u30eb retrieve() \u306e\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3001zip \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8fd4\u3057\u307e\u3059\u3002 \"\"\"checkRetrieveStatus\"\"\" retrieve_id = result[\"id\"] check_result = meta_api.checkRetrieveStatus(retrieve_id) pprint.pprint(check_result)","title":"SalesforceXyToolsCore/Python\u4e0a\u3067\u305f\u3063\u305f3\u884c\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97"},{"location":"jp/013-retrieve-all-metadata/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97","title":"Topic"},{"location":"jp/013-retrieve-all-metadata/#_1","text":"package.xml\u914d\u7f6e\u4e0d\u8981\u3001\u52d5\u7684\u306b\u751f\u6210 \u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u4e00\u62ec\u3067\u53d6\u5f97","title":"\u30e1\u30ea\u30c3\u30c8"},{"location":"jp/013-retrieve-all-metadata/#salesforce","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"retrieve zip file\"\"\" meta_api.retrieveZip(\"./save_dir\",\"metadata-retrieve.zip\") \u7d50\u679c\u78ba\u8a8d\uff1a ls ./save_dir","title":"Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97"},{"location":"jp/013-retrieve-all-metadata/#_2","text":"","title":"\u5206\u6790"},{"location":"jp/013-retrieve-all-metadata/#_3","text":"retrieve() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3001\u975e\u540c\u671f\u7684\u306a\u53d6\u5f97\u3092\u958b\u59cb\u3059\u308b\u3068\u3001 AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002 id \u9805\u76ee\u306e\u5024\u3092\u30e1\u30e2\u3057\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002 checkRetrieveStatus() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3066\u3001\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u306e AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089 id \u5024\u3092\u6e21\u3057\u307e\u3059\u3002\u8fd4\u3055\u308c\u305f RetrieveResult \u306e done \u9805\u76ee\u306e\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002true \u306e\u5834\u5408\u3001\u30b3\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u3066\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u9032\u3080\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001 done \u9805\u76ee\u304c true \u306b\u306a\u308b\u307e\u3067\u3001\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u7e70\u308a\u8fd4\u3057\u3066 checkRetrieveStatus() \u3092\u518d\u5ea6\u30b3\u30fc\u30eb\u3057\u307e\u3059\u3002 \u524d\u306e\u30b9\u30c6\u30c3\u30d7\u306e checkRetrieveStatus() \u3078\u306e\u6700\u5f8c\u306e\u30b3\u30fc\u30eb\u3067\u8fd4\u3055\u308c\u305f RetrieveResult \u304b\u3089 zip \u30d5\u30a1\u30a4\u30eb ( zipFile \u9805\u76ee) \u304a\u3088\u3073\u4ed6\u306e\u5fc5\u8981\u306a\u9805\u76ee\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002","title":"\u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30ed\u30b8\u30c3\u30af"},{"location":"jp/013-retrieve-all-metadata/#retrieve","text":"\u30bf\u30b9\u30af\u3092\u767a\u884c\u3059\u308b \"\"\"retrieve\"\"\" result = meta_api.startRetrieve() pprint.pprint(result) # print(result[\"done\"]) # print(result[\"id\"]) # print(result[\"state\"])","title":"retrieve\u30bf\u30b9\u30af\u3092\u958b\u59cb"},{"location":"jp/013-retrieve-all-metadata/#retrieve_1","text":"\u5ba3\u8a00\u7684\u306a\u30e1\u30bf\u30c7\u30fc\u30bf\u30b3\u30fc\u30eb retrieve() \u306e\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3001zip \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8fd4\u3057\u307e\u3059\u3002 \"\"\"checkRetrieveStatus\"\"\" retrieve_id = result[\"id\"] check_result = meta_api.checkRetrieveStatus(retrieve_id) pprint.pprint(check_result)","title":"retrieve\u306e\u72b6\u6cc1\u3092\u78ba\u8a8d"},{"location":"jp/014-download-attachments/","text":"Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b Attachment User \u304c\u89aa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304a\u3088\u3073\u6dfb\u4ed8\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 Body \u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308c\u3070\u3001\u5b8c\u4e86\u3067\u3059\u3002 Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } SAVE_DIR = './attachments_download' if not os.path.exists(SAVE_DIR): os.mkdir(SAVE_DIR) rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) attachments = rest_api.query(\"SELECT Id, Name, Body FROM Attachment LIMIT 2000\") print(\"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570 : \" + str(len(attachments))) for attachment in attachments[\"records\"]: print(\"start to download : \" + attachment[\"Name\"]) \"\"\" Run Rest API : download attachment \"\"\" rest_path = \"/services/data/v42.0/sobjects/Attachment/{id}/Body\".format(id=attachment[\"Id\"]) result = rest_api.call_rest( method='GET', path=rest_path, params={}, ) with open(os.path.join(SAVE_DIR, attachment[\"Id\"] + \"_\" + attachment[\"Name\"]), mode='wb') as f: f.write(result.content) \u5b9f\u884c\u3059\u308c\u3070\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u53ef\u80fd\u3067\u3059\u3002","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"},{"location":"jp/014-download-attachments/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b","title":"Topic"},{"location":"jp/014-download-attachments/#attachment","text":"User \u304c\u89aa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304a\u3088\u3073\u6dfb\u4ed8\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 Body \u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308c\u3070\u3001\u5b8c\u4e86\u3067\u3059\u3002","title":"Attachment"},{"location":"jp/014-download-attachments/#salesforce","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } SAVE_DIR = './attachments_download' if not os.path.exists(SAVE_DIR): os.mkdir(SAVE_DIR) rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) attachments = rest_api.query(\"SELECT Id, Name, Body FROM Attachment LIMIT 2000\") print(\"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570 : \" + str(len(attachments))) for attachment in attachments[\"records\"]: print(\"start to download : \" + attachment[\"Name\"]) \"\"\" Run Rest API : download attachment \"\"\" rest_path = \"/services/data/v42.0/sobjects/Attachment/{id}/Body\".format(id=attachment[\"Id\"]) result = rest_api.call_rest( method='GET', path=rest_path, params={}, ) with open(os.path.join(SAVE_DIR, attachment[\"Id\"] + \"_\" + attachment[\"Name\"]), mode='wb') as f: f.write(result.content) \u5b9f\u884c\u3059\u308c\u3070\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u53ef\u80fd\u3067\u3059\u3002","title":"Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/","text":"SalesforcexytoolsCore Introduce Requirement Install Document Download PDF About Author : Exia.Huang Sample Source SalesforceXyToolsCore/Python\u4e0a\u3067ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 Topic ApexClass\u306e\u4f5c\u6210 ApexClass\u306e\u66f4\u65b0 ApexClass\u306e\u524a\u9664 \u305d\u306e\u4ed6 Trigger\u306e\u4f5c\u6210 VisualForce\u306e\u4f5c\u6210 ApexComponent\u306e\u4f5c\u6210 SalesforceXyToolsCore/Python\u4e0a\u3067Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 Topic ID\u3067Sobject\u306e\u53d6\u5f97 \u5916\u90e8\u30ad\u30fc\u3067Sobject\u306e\u53d6\u5f97 ID\u3067Sobject\u306e\u66f4\u65b0 ID\u3067Sobject\u306e\u524a\u9664 SalesforceXyToolsCore/Python\u4e0a\u3067Apex\u30ed\u30b0\u3092\u53d6\u5f97 Topic Apex\u30ed\u30b0\u3092\u53d6\u5f97 SalesforceXyToolsCore/Python\u4e0a\u3067ApexScript\u3092\u5b9f\u884c\u3059\u308b Topic ApexScript\u3092\u5b9f\u884c\u3059\u308b \u7d50\u679c\u30ed\u30b0\u3092\u78ba\u8a8d\uff1a SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b Topic \u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b \u7d50\u679c\u78ba\u8a8d \u305d\u306e\u4ed6\u65b9\u6cd5 query_more query_all\u3067\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b search quick_search SalesforceXyToolsCore/Python\u4e0a\u3067\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b Topic \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9 Topic Apexclass\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b ApexCodeCoverage\u30ab\u30d0\u30fc\u7387\u3092\u53d6\u5f97\u3059\u308b Sobjects\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b Topic DescribeMetadata\u306e\u5b9f\u884c \u7d50\u679c\u78ba\u8a8d SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210 Topic Package.xml\u306e\u4f5c\u6210 SFDC\u7d44\u7e54\u304b\u3089Package\u95a2\u3059\u308b\u30ea\u30b9\u30c8\u3092\u53d6\u5f97 SalesforceXyToolsCore/Python\u4e0a\u3067\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u3088\u3046 Topic \u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b \u7d50\u679c\u78ba\u8a8d Metadata\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408 \u6307\u5b9a\u3057\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b Topic \u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b \u7d50\u679c\u78ba\u8a8d \u305d\u306e\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u30fc SalesforceXyToolsCore/Python\u4e0a\u3067\u305f\u3063\u305f3\u884c\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 Topic \u30e1\u30ea\u30c3\u30c8 Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 \u5206\u6790 \u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30ed\u30b8\u30c3\u30af retrieve\u30bf\u30b9\u30af\u3092\u958b\u59cb retrieve\u306e\u72b6\u6cc1\u3092\u78ba\u8a8d SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b Topic Attachment Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b SalesforcexytoolsCore Introduce SalesforcexytoolsCore is a python library for salesforce. It is base on simple-salesforce Sobject Record Management : sobject create, get, get_by_custom_id, update, delete Sobject Queries : query, query_more, search, query_allsearch Sobject Bulk action Run Apex Script Metadata Control : describeMetadata, listAllMetadata, getAllMetadataMap, listmeta, listFolder, retrieve, etc. Package.xml builder. Retrieve Metadata to memory, Retrieve Metadata zip file. ApexClass, Trigger, ApexComponent, ApexPage: create, update, delete, get Get Apex Log Run test class Requirement Python3 requests Install pip install SalesforcexytoolsCore Document SalesforceXyToolsCore JP Document Download PDF SalesforcexytoolsCore-python-library-for-salesforce(\u65e5\u672c\u8a9e).pdf About Author : Exia.Huang SalesforceXyTools HP Github Twitter Facebook Qiita Hatena\u306f\u3066\u306a\u30d6\u30ed\u30b0 Sample Source Sample Source apexclass-create.py apexclass-delete.py apexclass-update.py apexcomponent-create.py build-package-xml.py config.py describe-metadata.py download-attachments.py get-all-metadata-map.py get-apexlog.py list-all-metadata.py list-folders.py list-metadata.py package-type-list.py retrieve-metadata-to-memory.py retrieve-metadata-to-zip.py run-apex-script.py run-rest-api.py run-soql-queries.py run-testclass.py sobject-CURD.py trigger-create.py visualforce-create.py SalesforceXyToolsCore/Python\u4e0a\u3067ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 ApexClass\u306e\u4f5c\u6210 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"createApexClass\"\"\" name = \"HelloWorld\" body = \"\"\"public class HelloWorld { private String mystr; }\"\"\" status_code, result = tooling_api.createApexClass(name, body) print(status_code) pprint.pprint(result) \u7d50\u679c\u78ba\u8a8d\uff1a {'errors': [], 'id': '01pxxxxxxxxxxxxxxxxx', 'success': True} ApexClass\u306e\u66f4\u65b0 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body) ApexClass\u306e\u524a\u9664 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body) \u305d\u306e\u4ed6 Trigger\u306e\u4f5c\u6210 \"\"\"createTrigger\"\"\" tooling_api.createTrigger(tableEnumOrId, name, body) VisualForce\u306e\u4f5c\u6210 \"\"\"createApexPage\"\"\" tooling_api.createApexPage(MasterLabel, name, markup) ApexComponent\u306e\u4f5c\u6210 \"\"\"createApexComponent\"\"\" tooling_api.createApexComponent(MasterLabel, name, markup) SalesforceXyToolsCore/Python\u4e0a\u3067Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664 ID\u3067Sobject\u306e\u53d6\u5f97 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Account\u3092\u53d6\u5f97\u3059\u308b from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) print('hello SalesforceXytoolsCore Test start') Account = soap_api.get_sobject(\"Account\") \"\"\" get a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.get(acc_id) pprint.pprint(account1) \u5916\u90e8\u30ad\u30fc\u3067Sobject\u306e\u53d6\u5f97 \"\"\" get a Sobject by External ID \"\"\" account1 = Account.get_by_custom_id('My_Custom_ID__c', 'custom_id') pprint.pprint(account1) ID\u3067Sobject\u306e\u66f4\u65b0 \"\"\" update a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.update(acc_id,{'LastName': 'sfdc'}) pprint.pprint(account1) ID\u3067Sobject\u306e\u524a\u9664 \"\"\" delete a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" Account.delete(acc_id) SalesforceXyToolsCore/Python\u4e0a\u3067Apex\u30ed\u30b0\u3092\u53d6\u5f97 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Apex\u30ed\u30b0\u3092\u53d6\u5f97 Apex\u30ed\u30b0\u3092\u53d6\u5f97 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"get apex log\"\"\" log_id = '07LXXXXXXXXXXXXXXXXXXXX' result = tooling_api.getLog(log_id) pprint.pprint(result) SalesforceXyToolsCore/Python\u4e0a\u3067ApexScript\u3092\u5b9f\u884c\u3059\u308b Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eApexScript\u3092\u5b9f\u884c\u3059\u308b ApexScript\u3092\u5b9f\u884c\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Apex Script \"\"\" apex_string = \"System.debug('hello world');\" debug_levels = { \"DB\": \"Info\", \"System\": \"DEBUG\", \"Workflow\": \"INFO\", \"Callout\": \"INFO\", \"Validation\": \"INFO\", \"Apex_Code\": \"DEBUG\", \"Apex_Profiling\": \"INFO\" } result = soap_api.execute_anonymous(apex_string, debug_levels) pprint.pprint(result) \u7d50\u679c\u30ed\u30b0\u3092\u78ba\u8a8d\uff1a {'debugLog': '42.0 ' 'APEX_CODE,DEBUG;APEX_PROFILING,INFO;CALLOUT,INFO;DB,INFO;SYSTEM,DEBUG;VALIDATION,INFO;WORKFLOW,INFO\\n' \"Execute Anonymous: System.debug('hello world');\\n\" '22:22:14.19 ' '()|USER_INFO|[EXTERNAL]|xxxxxxxxxxxxxxxxxxxxxxxxx|\u65e5\u672c\u6a19\u6e96\u6642|GMT+09:00\\n' '22:22:14.19 ()|EXECUTION_STARTED\\n' '22:22:14.19 ' '()|CODE_UNIT_STARTED|[EXTERNAL]|execute_anonymous_apex\\n' '22:22:14.19 ()|USER_DEBUG|[1]|DEBUG|hello world\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE\\n' '22:22:14.19 ()|LIMIT_USAGE_FOR_NS|(default)|\\n' ' Number of SOQL queries: 0 out of 100\\n' ' Number of query rows: 0 out of 50000\\n' ' Number of SOSL queries: 0 out of 20\\n' ' Number of DML statements: 0 out of 150\\n' ' Number of DML rows: 0 out of 10000\\n' ' Maximum CPU time: 0 out of 10000\\n' ' Maximum heap size: 0 out of 6000000\\n' ' Number of callouts: 0 out of 100\\n' ' Number of Email Invocations: 0 out of 10\\n' ' Number of future calls: 0 out of 50\\n' ' Number of queueable jobs added to the queue: 0 out of 50\\n' ' Number of Mobile Apex push calls: 0 out of 10\\n' '\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE_END\\n' '\\n' '22:22:14.19 ' '()|CODE_UNIT_FINISHED|execute_anonymous_apex\\n' '22:22:14.19 ()|EXECUTION_FINISHED\\n', 'success': True} SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b \u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Soql Queries \"\"\" soql_string = \"SELECT Id, Name FROM User LIMIT 3\" result = soap_api.query(soql_string) pprint.pprint(result) \u7d50\u679c\u78ba\u8a8d OrderedDict([('totalSize', 3), ('done', True), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'Process Automated')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', '\u30b5\u30a4\u30c8\u30b2\u30b9\u30c8\u30e6\u30fc\u30b6')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'SFDC Exia')])])]) \u305d\u306e\u4ed6\u65b9\u6cd5 query_more soap_api.query_more(sobject_id) soap_api.query_more(\"/services/data/v43.0/query/sobject_id\", True) query_all\u3067\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b soap_api.query_all(\"SELECT Id, Email FROM Contact WHERE LastName = 'Jones'\") search soap_api.search(\"FIND {exia}\") quick_search soap_api.quick_search(\"exia\") SalesforceXyToolsCore/Python\u4e0a\u3067\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b \u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"run test class\"\"\" id_list = ['xxx', 'xxxx'] tooling_api.runTestSynchronous(id_list) SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9 Apexclass\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Rest API : query apexclass \"\"\" sel_string = \"Select Id, Name From ApexClass Limit 3\" params = {'q': sel_string} result = rest_api.restful('tooling/query', params) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d OrderedDict([('size', 3), ('totalSize', 3), ('done', True), ('queryLocator', None), ('entityTypeName', 'ApexClass'), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'OpportXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'DaoXXXXXXXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'ExiaXXXXXXXXXXXXX')])])]) ApexCodeCoverage\u30ab\u30d0\u30fc\u7387\u3092\u53d6\u5f97\u3059\u308b \"\"\" Run Rest API : query ApexCodeCoverage \"\"\" sel_string = \"SELECT Id, ApexTestClassId, TestMethodName, ApexClassorTriggerId, NumLinesCovered, NumLinesUncovered, Coverage FROM ApexCodeCoverage\" params = {'q': sel_string} result = rest_api.restful( path='tooling/query', params=params, method='GET' ) pprint.pprint(result) Sobjects\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b \"\"\" Run Rest API : search sobjects \"\"\" result = rest_api.call_rest( method='GET', path='/services/data/v37.0/sobjects', params={}, ) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d {'encoding': 'UTF-8', 'maxBatchSize': 200, 'sobjects': [ {'activateable': False, 'createable': True, 'custom': False, 'customSetting': False, 'deletable': True, 'deprecatedAndHidden': False, 'feedEnabled': True, 'keyPrefix': '006', 'label': 'Opportunity', 'labelPlural': 'Opportunities', 'layoutable': True, 'mergeable': False, 'mruEnabled': True, 'name': 'Opportunity', 'queryable': True, 'replicateable': True, 'retrieveable': True, 'searchable': True, 'triggerable': True, 'undeletable': True, 'updateable': True, 'urls': {'approvalLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/approvalLayouts', 'compactLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/compactLayouts', 'defaultValues': '/services/data/v37.0/sobjects/Opportunity/defaultValues?recordTypeId&fields', 'describe': '/services/data/v37.0/sobjects/Opportunity/describe', 'layouts': '/services/data/v37.0/sobjects/Opportunity/describe/layouts', 'listviews': '/services/data/v37.0/sobjects/Opportunity/listviews', 'quickActions': '/services/data/v37.0/sobjects/Opportunity/quickActions', 'rowTemplate': '/services/data/v37.0/sobjects/Opportunity/{ID}', 'sobject': '/services/data/v37.0/sobjects/Opportunity'}}, ................ ................ .....\u7701\u7565....... ................ ................ ] } SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066\u3001DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u60c5\u5831\u306b\u306f Apex \u30af\u30e9\u30b9\u304a\u3088\u3073\u30c8\u30ea\u30ac\u3001\u30ab\u30b9\u30bf\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u6a19\u6e96\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ab\u30b9\u30bf\u30e0\u9805\u76ee\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u30bf\u30d6\u30bb\u30c3\u30c8\u3001\u304a\u3088\u3073\u4ed6\u306e\u591a\u304f\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u578b\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002 DescribeMetadata\u306e\u5b9f\u884c Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" describeMetadata : This call retrieves the metadata that describes your organization. This information includes Apex classes and triggers, custom objects, custom fields on standard objects, tab sets that define an app, and many other metadata types. \"\"\" result = meta_api.describeMetadata() pprint.pprint(result) ## print(json.dumps(result, indent=4)) \u7d50\u679c\u78ba\u8a8d OrderedDict([('metadataObjects', [OrderedDict([('directoryName', 'installedPackages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'installedPackage'), ('xmlName', 'InstalledPackage')]), OrderedDict([('childXmlNames', 'CustomLabel'), ('directoryName', 'labels'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'labels'), ('xmlName', 'CustomLabels')]), OrderedDict([('directoryName', 'staticresources'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'resource'), ('xmlName', 'StaticResource')]), OrderedDict([('directoryName', 'scontrols'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'scf'), ('xmlName', 'Scontrol')]), OrderedDict([('directoryName', 'certs'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'crt'), ('xmlName', 'Certificate')]), OrderedDict([('directoryName', 'aura'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'AuraDefinitionBundle')]), OrderedDict([('directoryName', 'lightningcomponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'LightningComponentBundle')]), OrderedDict([('directoryName', 'components'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'component'), ('xmlName', 'ApexComponent')]), OrderedDict([('directoryName', 'pages'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'page'), ('xmlName', 'ApexPage')]), OrderedDict([('directoryName', 'queues'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'queue'), ('xmlName', 'Queue')]), OrderedDict([('directoryName', 'CaseSubjectParticles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'CaseSubjectParticle'), ('xmlName', 'CaseSubjectParticle')]), OrderedDict([('directoryName', 'dataSources'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'dataSource'), ('xmlName', 'ExternalDataSource')]), OrderedDict([('directoryName', 'namedCredentials'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'namedCredential'), ('xmlName', 'NamedCredential')]), OrderedDict([('directoryName', 'externalServiceRegistrations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'externalServiceRegistration'), ('xmlName', 'ExternalServiceRegistration')]), OrderedDict([('directoryName', 'roles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'role'), ('xmlName', 'Role')]), OrderedDict([('directoryName', 'groups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'group'), ('xmlName', 'Group')]), OrderedDict([('directoryName', 'globalValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSet'), ('xmlName', 'GlobalValueSet')]), OrderedDict([('directoryName', 'standardValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSet'), ('xmlName', 'StandardValueSet')]), OrderedDict([('directoryName', 'customPermissions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customPermission'), ('xmlName', 'CustomPermission')]), OrderedDict([('childXmlNames', ['CustomField', 'Index', 'BusinessProcess', 'CompactLayout', 'RecordType', 'WebLink', 'ValidationRule', 'SharingReason', 'ListView', 'FieldSet']), ('directoryName', 'objects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'object'), ('xmlName', 'CustomObject')]), OrderedDict([('directoryName', 'reportTypes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'reportType'), ('xmlName', 'ReportType')]), OrderedDict([('directoryName', 'reports'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'report'), ('xmlName', 'Report')]), OrderedDict([('directoryName', 'dashboards'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'dashboard'), ('xmlName', 'Dashboard')]), OrderedDict([('directoryName', 'analyticSnapshots'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'snapshot'), ('xmlName', 'AnalyticSnapshot')]), OrderedDict([('directoryName', 'feedFilters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'feedFilter'), ('xmlName', 'CustomFeedFilter')]), OrderedDict([('directoryName', 'layouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'layout'), ('xmlName', 'Layout')]), OrderedDict([('directoryName', 'documents'), ('inFolder', 'true'), ('metaFile', 'true'), ('xmlName', 'Document')]), OrderedDict([('directoryName', 'weblinks'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'weblink'), ('xmlName', 'CustomPageWebLink')]), OrderedDict([('directoryName', 'letterhead'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'letter'), ('xmlName', 'Letterhead')]), OrderedDict([('directoryName', 'email'), ('inFolder', 'true'), ('metaFile', 'true'), ('suffix', 'email'), ('xmlName', 'EmailTemplate')]), OrderedDict([('directoryName', 'quickActions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'quickAction'), ('xmlName', 'QuickAction')]), OrderedDict([('directoryName', 'flexipages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flexipage'), ('xmlName', 'FlexiPage')]), OrderedDict([('directoryName', 'tabs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'tab'), ('xmlName', 'CustomTab')]), OrderedDict([('directoryName', 'customApplicationComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customApplicationComponent'), ('xmlName', 'CustomApplicationComponent')]), OrderedDict([('directoryName', 'applications'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'app'), ('xmlName', 'CustomApplication')]), OrderedDict([('directoryName', 'EmbeddedServiceConfig'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceConfig'), ('xmlName', 'EmbeddedServiceConfig')]), OrderedDict([('directoryName', 'EmbeddedServiceBranding'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceBranding'), ('xmlName', 'EmbeddedServiceBranding')]), OrderedDict([('directoryName', 'flows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flow'), ('xmlName', 'Flow')]), OrderedDict([('directoryName', 'flowDefinitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowDefinition'), ('xmlName', 'FlowDefinition')]), OrderedDict([('directoryName', 'eventSubscriptions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'subscription'), ('xmlName', 'EventSubscription')]), OrderedDict([('directoryName', 'eventDeliveries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delivery'), ('xmlName', 'EventDelivery')]), OrderedDict([('childXmlNames', ['WorkflowFieldUpdate', 'WorkflowKnowledgePublish', 'WorkflowTask', 'WorkflowAlert', 'WorkflowSend', 'WorkflowOutboundMessage', 'WorkflowRule']), ('directoryName', 'workflows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'workflow'), ('xmlName', 'Workflow')]), OrderedDict([('childXmlNames', 'AssignmentRule'), ('directoryName', 'assignmentRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'assignmentRules'), ('xmlName', 'AssignmentRules')]), OrderedDict([('childXmlNames', 'AutoResponseRule'), ('directoryName', 'autoResponseRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'autoResponseRules'), ('xmlName', 'AutoResponseRules')]), OrderedDict([('childXmlNames', 'EscalationRule'), ('directoryName', 'escalationRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'escalationRules'), ('xmlName', 'EscalationRules')]), OrderedDict([('directoryName', 'postTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'postTemplate'), ('xmlName', 'PostTemplate')]), OrderedDict([('directoryName', 'approvalProcesses'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'approvalProcess'), ('xmlName', 'ApprovalProcess')]), OrderedDict([('directoryName', 'homePageComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageComponent'), ('xmlName', 'HomePageComponent')]), OrderedDict([('directoryName', 'homePageLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageLayout'), ('xmlName', 'HomePageLayout')]), OrderedDict([('directoryName', 'objectTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'objectTranslation'), ('xmlName', 'CustomObjectTranslation')]), OrderedDict([('directoryName', 'globalValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSetTranslation'), ('xmlName', 'GlobalValueSetTranslation')]), OrderedDict([('directoryName', 'standardValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSetTranslation'), ('xmlName', 'StandardValueSetTranslation')]), OrderedDict([('directoryName', 'classes'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'cls'), ('xmlName', 'ApexClass')]), OrderedDict([('directoryName', 'triggers'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'trigger'), ('xmlName', 'ApexTrigger')]), OrderedDict([('directoryName', 'testSuites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'testSuite'), ('xmlName', 'ApexTestSuite')]), OrderedDict([('directoryName', 'profiles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profile'), ('xmlName', 'Profile')]), OrderedDict([('directoryName', 'permissionsets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'permissionset'), ('xmlName', 'PermissionSet')]), OrderedDict([('directoryName', 'customMetadata'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'md'), ('xmlName', 'CustomMetadata')]), OrderedDict([('directoryName', 'profilePasswordPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profilePasswordPolicy'), ('xmlName', 'ProfilePasswordPolicy')]), OrderedDict([('directoryName', 'profileSessionSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profileSessionSetting'), ('xmlName', 'ProfileSessionSetting')]), OrderedDict([('directoryName', 'datacategorygroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'datacategorygroup'), ('xmlName', 'DataCategoryGroup')]), OrderedDict([('directoryName', 'remoteSiteSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'remoteSite'), ('xmlName', 'RemoteSiteSetting')]), OrderedDict([('directoryName', 'cspTrustedSites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cspTrustedSite'), ('xmlName', 'CspTrustedSite')]), OrderedDict([('childXmlNames', 'MatchingRule'), ('directoryName', 'matchingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'matchingRule'), ('xmlName', 'MatchingRules')]), OrderedDict([('directoryName', 'duplicateRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'duplicateRule'), ('xmlName', 'DuplicateRule')]), OrderedDict([('directoryName', 'cleanDataServices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cleanDataService'), ('xmlName', 'CleanDataService')]), OrderedDict([('directoryName', 'authproviders'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'authprovider'), ('xmlName', 'AuthProvider')]), OrderedDict([('directoryName', 'eclair'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'geodata'), ('xmlName', 'EclairGeoData')]), OrderedDict([('directoryName', 'sites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'site'), ('xmlName', 'CustomSite')]), OrderedDict([('directoryName', 'channelLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'channelLayout'), ('xmlName', 'ChannelLayout')]), OrderedDict([('directoryName', 'contentassets'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'asset'), ('xmlName', 'ContentAsset')]), OrderedDict([('childXmlNames', ['SharingOwnerRule', 'SharingCriteriaRule']), ('directoryName', 'sharingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingRules'), ('xmlName', 'SharingRules')]), OrderedDict([('directoryName', 'sharingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingSet'), ('xmlName', 'SharingSet')]), OrderedDict([('directoryName', 'communities'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'community'), ('xmlName', 'Community')]), OrderedDict([('directoryName', 'ChatterExtensions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'ChatterExtension'), ('xmlName', 'ChatterExtension')]), OrderedDict([('directoryName', 'callCenters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'callCenter'), ('xmlName', 'CallCenter')]), OrderedDict([('directoryName', 'connectedApps'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'connectedApp'), ('xmlName', 'ConnectedApp')]), OrderedDict([('directoryName', 'appMenus'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'appMenu'), ('xmlName', 'AppMenu')]), OrderedDict([('directoryName', 'delegateGroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delegateGroup'), ('xmlName', 'DelegateGroup')]), OrderedDict([('directoryName', 'siteDotComSites'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'site'), ('xmlName', 'SiteDotCom')]), OrderedDict([('directoryName', 'networkBranding'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'networkBranding'), ('xmlName', 'NetworkBranding')]), OrderedDict([('directoryName', 'brandingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'brandingSet'), ('xmlName', 'BrandingSet')]), OrderedDict([('directoryName', 'flowCategories'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowCategory'), ('xmlName', 'FlowCategory')]), OrderedDict([('directoryName', 'lightningBolts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningBolt'), ('xmlName', 'LightningBolt')]), OrderedDict([('directoryName', 'lightningExperienceThemes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningExperienceTheme'), ('xmlName', 'LightningExperienceTheme')]), OrderedDict([('directoryName', 'samlssoconfigs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'samlssoconfig'), ('xmlName', 'SamlSsoConfig')]), OrderedDict([('directoryName', 'corsWhitelistOrigins'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'corsWhitelistOrigin'), ('xmlName', 'CorsWhitelistOrigin')]), OrderedDict([('directoryName', 'actionLinkGroupTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'actionLinkGroupTemplate'), ('xmlName', 'ActionLinkGroupTemplate')]), OrderedDict([('directoryName', 'transactionSecurityPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'transactionSecurityPolicy'), ('xmlName', 'TransactionSecurityPolicy')]), OrderedDict([('directoryName', 'synonymDictionaries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'synonymDictionary'), ('xmlName', 'SynonymDictionary')]), OrderedDict([('directoryName', 'pathAssistants'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'pathAssistant'), ('xmlName', 'PathAssistant')]), OrderedDict([('directoryName', 'LeadConvertSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'LeadConvertSetting'), ('xmlName', 'LeadConvertSettings')]), OrderedDict([('directoryName', 'cachePartitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cachePartition'), ('xmlName', 'PlatformCachePartition')]), OrderedDict([('directoryName', 'topicsForObjects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'topicsForObjects'), ('xmlName', 'TopicsForObjects')]), OrderedDict([('directoryName', 'emailservices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'xml'), ('xmlName', 'EmailServicesFunction')]), OrderedDict([('directoryName', 'settings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'settings'), ('xmlName', 'Settings')])]), ('organizationNamespace', None), ('partialSaveAllowed', 'true'), ('testRequired', 'false')]) SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210 Package.xml\u306e\u4f5c\u6210 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"buildPackageXml\"\"\" packagexml = meta_api.buildPackageXml() \u7d50\u679c\u78ba\u8a8d\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <types> <members>*</members> <name>InstalledPackage</name> </types> <types> <members>*</members> <name>CustomLabels</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>Account</members> <members>AccountChangeEvent</members> <members>AccountCleanInfo</members> <members>AccountContactRole</members> <members>AccountFeed</members> <members>AccountHistory</members> <members>AccountPartner</members> <members>AccountShare</members> <members>ActionLinkGroupTemplate</members> <members>ActionLinkTemplate</members> <members>ActivityHistory</members> <members>AdditionalNumber</members> <members>AggregateResult</members> .................... ........\u7701\u7565......... .................... <name>CustomObject</name> </types> <types> <members>unfiled$public</members> .................... ........\u7701\u7565......... .................... <members>unfiled$public/SupportCaseAssignmentNotification</members> <members>unfiled$public/SalesNewCustomerEmail</members> <members>unfiled$public/SupportCaseCreatedWebInquiries</members> <members>unfiled$public/SupportEscalatedCaseNotification</members> <members>unfiled$public/SupportSelfServiceResetPassword</members> <members>unfiled$public/MarketingProductInquiryResponse</members> <members>unfiled$public/SupportCaseCreatedPhoneInquiries</members> <members>unfiled$public/SUPPORTSelfServiceResetPasswordSAMPLE</members> <members>unfiled$public/SupportEscalatedCaseReassignment</members> <members>unfiled$public/SUPPORTSelfServiceNewCommentNotificationSAMPLE</members> <name>EmailTemplate</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>*</members> <name>TopicsForObjects</name> </types> <types> <members>*</members> <name>EmailServicesFunction</name> </types> <types> <members>*</members> <name>Settings</name> </types> <version>42.0</version> </Package> SFDC\u7d44\u7e54\u304b\u3089Package\u95a2\u3059\u308b\u30ea\u30b9\u30c8\u3092\u53d6\u5f97 \"\"\"packageTypeList\"\"\" print('>>>packageTypeList') pprint.pprint(meta_api.packageTypeList()) \u7d50\u679c\u78ba\u8a8d [{'members': ['*'], 'name': 'InstalledPackage'}, {'members': ['*'], 'name': 'CustomLabels'}, {'members': ['*'], 'name': 'StaticResource'}, .................... ........\u7701\u7565......... .................... {'members': ['*'], 'name': 'TopicsForObjects'}, {'members': ['*'], 'name': 'EmailServicesFunction'}, {'members': ['*'], 'name': 'Settings'}] SalesforceXyToolsCore/Python\u4e0a\u3067\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u3088\u3046 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002 \u30e1\u30bf\u30c7\u30fc\u30bf\u306eID,\u3000Type\u3092\u53d6\u5f97\u53ef\u80fd\u3067\u3059\u3002 \u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"getAllMetadataMap\"\"\" all_metadata_map = meta_api.getAllMetadataMap() pprint.pprint(all_metadata_map) \u7d50\u679c\u78ba\u8a8d {'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 } Metadata\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408 \"\"\"listAllMetadata \"\"\" for meta in meta_api.listAllMetadata(): pprint.pprint(meta) \u6307\u5b9a\u3057\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b \"\"\"listmeta\"\"\" query_option_list = [ { \"metadata_type\" : \"EmailFolder\", \"folder\" : \"\" }, { \"metadata_type\" : \"ApexClass\", \"folder\" : \"\" } ] listmeta_result = meta_api.listMetadata(query_option_list) print(len(listmeta_result)) for meta in listmeta_result: pprint.pprint(meta) SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b \u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"listFolder\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") pprint.pprint(folders) \u7d50\u679c\u78ba\u8a8d {'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 } \u305d\u306e\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u30fc Salesforce \u306b\u306f\u3001\u73fe\u5728\u6b21\u306e 4 \u3064\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30d5\u30a9\u30eb\u30c0 \u30e1\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0 \u30ec\u30dd\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0 \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30d5\u30a9\u30eb\u30c0 Four folder types currently exist in Salesforce: Document folder Email folder Report folder Dashboard folder \u53d6\u5f97\u65b9\u6cd5\uff1a \"\"\"Email folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") \"\"\"Document folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Document\") \"\"\"Report folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Report\") \"\"\"Dashboard folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Dashboard\") SalesforceXyToolsCore/Python\u4e0a\u3067\u305f\u3063\u305f3\u884c\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 \u30e1\u30ea\u30c3\u30c8 package.xml\u914d\u7f6e\u4e0d\u8981\u3001\u52d5\u7684\u306b\u751f\u6210 \u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u4e00\u62ec\u3067\u53d6\u5f97 Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97 Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"retrieve zip file\"\"\" meta_api.retrieveZip(\"./save_dir\",\"metadata-retrieve.zip\") \u7d50\u679c\u78ba\u8a8d\uff1a ls ./save_dir \u5206\u6790 \u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30ed\u30b8\u30c3\u30af retrieve() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3001\u975e\u540c\u671f\u7684\u306a\u53d6\u5f97\u3092\u958b\u59cb\u3059\u308b\u3068\u3001 AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002 id \u9805\u76ee\u306e\u5024\u3092\u30e1\u30e2\u3057\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002 checkRetrieveStatus() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3066\u3001\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u306e AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089 id \u5024\u3092\u6e21\u3057\u307e\u3059\u3002\u8fd4\u3055\u308c\u305f RetrieveResult \u306e done \u9805\u76ee\u306e\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002true \u306e\u5834\u5408\u3001\u30b3\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u3066\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u9032\u3080\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001 done \u9805\u76ee\u304c true \u306b\u306a\u308b\u307e\u3067\u3001\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u7e70\u308a\u8fd4\u3057\u3066 checkRetrieveStatus() \u3092\u518d\u5ea6\u30b3\u30fc\u30eb\u3057\u307e\u3059\u3002 \u524d\u306e\u30b9\u30c6\u30c3\u30d7\u306e checkRetrieveStatus() \u3078\u306e\u6700\u5f8c\u306e\u30b3\u30fc\u30eb\u3067\u8fd4\u3055\u308c\u305f RetrieveResult \u304b\u3089 zip \u30d5\u30a1\u30a4\u30eb ( zipFile \u9805\u76ee) \u304a\u3088\u3073\u4ed6\u306e\u5fc5\u8981\u306a\u9805\u76ee\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002 retrieve\u30bf\u30b9\u30af\u3092\u958b\u59cb \u30bf\u30b9\u30af\u3092\u767a\u884c\u3059\u308b \"\"\"retrieve\"\"\" result = meta_api.startRetrieve() pprint.pprint(result) ## print(result[\"done\"]) ## print(result[\"id\"]) ## print(result[\"state\"]) retrieve\u306e\u72b6\u6cc1\u3092\u78ba\u8a8d \u5ba3\u8a00\u7684\u306a\u30e1\u30bf\u30c7\u30fc\u30bf\u30b3\u30fc\u30eb retrieve() \u306e\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3001zip \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8fd4\u3057\u307e\u3059\u3002 \"\"\"checkRetrieveStatus\"\"\" retrieve_id = result[\"id\"] check_result = meta_api.checkRetrieveStatus(retrieve_id) pprint.pprint(check_result) SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b Topic SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b Attachment User \u304c\u89aa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304a\u3088\u3073\u6dfb\u4ed8\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 Body \u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308c\u3070\u3001\u5b8c\u4e86\u3067\u3059\u3002 Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } SAVE_DIR = './attachments_download' if not os.path.exists(SAVE_DIR): os.mkdir(SAVE_DIR) rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) attachments = rest_api.query(\"SELECT Id, Name, Body FROM Attachment LIMIT 2000\") print(\"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570 : \" + str(len(attachments))) for attachment in attachments[\"records\"]: print(\"start to download : \" + attachment[\"Name\"]) \"\"\" Run Rest API : download attachment \"\"\" rest_path = \"/services/data/v42.0/sobjects/Attachment/{id}/Body\".format(id=attachment[\"Id\"]) result = rest_api.call_rest( method='GET', path=rest_path, params={}, ) with open(os.path.join(SAVE_DIR, attachment[\"Id\"] + \"_\" + attachment[\"Name\"]), mode='wb') as f: f.write(result.content) \u5b9f\u884c\u3059\u308c\u3070\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u53ef\u80fd\u3067\u3059\u3002","title":"SalesforcexytoolsCore, a python library for salesforce"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscore","text":"","title":"SalesforcexytoolsCore"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#introduce","text":"SalesforcexytoolsCore is a python library for salesforce. It is base on simple-salesforce Sobject Record Management : sobject create, get, get_by_custom_id, update, delete Sobject Queries : query, query_more, search, query_allsearch Sobject Bulk action Run Apex Script Metadata Control : describeMetadata, listAllMetadata, getAllMetadataMap, listmeta, listFolder, retrieve, etc. Package.xml builder. Retrieve Metadata to memory, Retrieve Metadata zip file. ApexClass, Trigger, ApexComponent, ApexPage: create, update, delete, get Get Apex Log Run test class","title":"Introduce"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#requirement","text":"Python3 requests","title":"Requirement"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#install","text":"pip install SalesforcexytoolsCore","title":"Install"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#document","text":"SalesforceXyToolsCore JP Document","title":"Document"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#download-pdf","text":"SalesforcexytoolsCore-python-library-for-salesforce(\u65e5\u672c\u8a9e).pdf","title":"Download PDF"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#about-author-exiahuang","text":"SalesforceXyTools HP Github Twitter Facebook Qiita Hatena\u306f\u3066\u306a\u30d6\u30ed\u30b0","title":"About Author : Exia.Huang"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#sample-source","text":"Sample Source apexclass-create.py apexclass-delete.py apexclass-update.py apexcomponent-create.py build-package-xml.py config.py describe-metadata.py download-attachments.py get-all-metadata-map.py get-apexlog.py list-all-metadata.py list-folders.py list-metadata.py package-type-list.py retrieve-metadata-to-memory.py retrieve-metadata-to-zip.py run-apex-script.py run-rest-api.py run-soql-queries.py run-testclass.py sobject-CURD.py trigger-create.py visualforce-create.py","title":"Sample Source"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonapexclass","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066ApexClass\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexclass","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"createApexClass\"\"\" name = \"HelloWorld\" body = \"\"\"public class HelloWorld { private String mystr; }\"\"\" status_code, result = tooling_api.createApexClass(name, body) print(status_code) pprint.pprint(result) \u7d50\u679c\u78ba\u8a8d\uff1a {'errors': [], 'id': '01pxxxxxxxxxxxxxxxxx', 'success': True}","title":"ApexClass\u306e\u4f5c\u6210"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexclass_1","text":"from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body)","title":"ApexClass\u306e\u66f4\u65b0"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexclass_2","text":"from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) apexclass_id = \"set your apex class id\" body = \"\"\"public class HelloWorld { private String mystr1; }\"\"\" tooling_api.updateApexClass(apexclass_id, body)","title":"ApexClass\u306e\u524a\u9664"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_1","text":"","title":"\u305d\u306e\u4ed6"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#trigger","text":"\"\"\"createTrigger\"\"\" tooling_api.createTrigger(tableEnumOrId, name, body)","title":"Trigger\u306e\u4f5c\u6210"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#visualforce","text":"\"\"\"createApexPage\"\"\" tooling_api.createApexPage(MasterLabel, name, markup)","title":"VisualForce\u306e\u4f5c\u6210"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexcomponent","text":"\"\"\"createApexComponent\"\"\" tooling_api.createApexComponent(MasterLabel, name, markup)","title":"ApexComponent\u306e\u4f5c\u6210"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsobject","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_1","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Sobject\u3092\u4f5c\u6210\u30fb\u66f4\u65b0\u30fb\u524a\u9664","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#idsobject","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 Account\u3092\u53d6\u5f97\u3059\u308b from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) print('hello SalesforceXytoolsCore Test start') Account = soap_api.get_sobject(\"Account\") \"\"\" get a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.get(acc_id) pprint.pprint(account1)","title":"ID\u3067Sobject\u306e\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#sobject","text":"\"\"\" get a Sobject by External ID \"\"\" account1 = Account.get_by_custom_id('My_Custom_ID__c', 'custom_id') pprint.pprint(account1)","title":"\u5916\u90e8\u30ad\u30fc\u3067Sobject\u306e\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#idsobject_1","text":"\"\"\" update a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" account1 = Account.update(acc_id,{'LastName': 'sfdc'}) pprint.pprint(account1)","title":"ID\u3067Sobject\u306e\u66f4\u65b0"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#idsobject_2","text":"\"\"\" delete a Sobject in Salesforce \"\"\" acc_id=\"set your sobject id\" Account.delete(acc_id)","title":"ID\u3067Sobject\u306e\u524a\u9664"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonapex","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Apex\u30ed\u30b0\u3092\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_2","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Apex\u30ed\u30b0\u3092\u53d6\u5f97","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apex","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"get apex log\"\"\" log_id = '07LXXXXXXXXXXXXXXXXXXXX' result = tooling_api.getLog(log_id) pprint.pprint(result)","title":"Apex\u30ed\u30b0\u3092\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonapexscript","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067ApexScript\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_3","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eApexScript\u3092\u5b9f\u884c\u3059\u308b","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexscript","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Apex Script \"\"\" apex_string = \"System.debug('hello world');\" debug_levels = { \"DB\": \"Info\", \"System\": \"DEBUG\", \"Workflow\": \"INFO\", \"Callout\": \"INFO\", \"Validation\": \"INFO\", \"Apex_Code\": \"DEBUG\", \"Apex_Profiling\": \"INFO\" } result = soap_api.execute_anonymous(apex_string, debug_levels) pprint.pprint(result)","title":"ApexScript\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_2","text":"{'debugLog': '42.0 ' 'APEX_CODE,DEBUG;APEX_PROFILING,INFO;CALLOUT,INFO;DB,INFO;SYSTEM,DEBUG;VALIDATION,INFO;WORKFLOW,INFO\\n' \"Execute Anonymous: System.debug('hello world');\\n\" '22:22:14.19 ' '()|USER_INFO|[EXTERNAL]|xxxxxxxxxxxxxxxxxxxxxxxxx|\u65e5\u672c\u6a19\u6e96\u6642|GMT+09:00\\n' '22:22:14.19 ()|EXECUTION_STARTED\\n' '22:22:14.19 ' '()|CODE_UNIT_STARTED|[EXTERNAL]|execute_anonymous_apex\\n' '22:22:14.19 ()|USER_DEBUG|[1]|DEBUG|hello world\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE\\n' '22:22:14.19 ()|LIMIT_USAGE_FOR_NS|(default)|\\n' ' Number of SOQL queries: 0 out of 100\\n' ' Number of query rows: 0 out of 50000\\n' ' Number of SOSL queries: 0 out of 20\\n' ' Number of DML statements: 0 out of 150\\n' ' Number of DML rows: 0 out of 10000\\n' ' Maximum CPU time: 0 out of 10000\\n' ' Maximum heap size: 0 out of 6000000\\n' ' Number of callouts: 0 out of 100\\n' ' Number of Email Invocations: 0 out of 10\\n' ' Number of future calls: 0 out of 50\\n' ' Number of queueable jobs added to the queue: 0 out of 50\\n' ' Number of Mobile Apex push calls: 0 out of 10\\n' '\\n' '22:22:14.19 ()|CUMULATIVE_LIMIT_USAGE_END\\n' '\\n' '22:22:14.19 ' '()|CODE_UNIT_FINISHED|execute_anonymous_apex\\n' '22:22:14.19 ()|EXECUTION_FINISHED\\n', 'success': True}","title":"\u7d50\u679c\u30ed\u30b0\u3092\u78ba\u8a8d\uff1a"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsalesforcesoql","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_4","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306eSoql\u3092\u5b9f\u884c\u3059\u308b","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_3","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } soap_api = Soap(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Soql Queries \"\"\" soql_string = \"SELECT Id, Name FROM User LIMIT 3\" result = soap_api.query(soql_string) pprint.pprint(result)","title":"\u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_4","text":"OrderedDict([('totalSize', 3), ('done', True), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'Process Automated')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', '\u30b5\u30a4\u30c8\u30b2\u30b9\u30c8\u30e6\u30fc\u30b6')]), OrderedDict([('attributes', OrderedDict([('type', 'User'), ('url', '/services/data/v42.0/sobjects/User/005XXXXXXXXXXXXXXX')])), ('Id', '005XXXXXXXXXXXXXXX'), ('Name', 'SFDC Exia')])])])","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_5","text":"","title":"\u305d\u306e\u4ed6\u65b9\u6cd5"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#query_more","text":"soap_api.query_more(sobject_id) soap_api.query_more(\"/services/data/v43.0/query/sobject_id\", True)","title":"query_more"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#query_all","text":"soap_api.query_all(\"SELECT Id, Email FROM Contact WHERE LastName = 'Jones'\")","title":"query_all\u3067\u3059\u3079\u3066\u306e\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#search","text":"soap_api.search(\"FIND {exia}\")","title":"search"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#quick_search","text":"soap_api.quick_search(\"exia\")","title":"quick_search"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepython","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_5","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306e\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_6","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } tooling_api = ToolingApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"run test class\"\"\" id_list = ['xxx', 'xxxx'] tooling_api.runTestSynchronous(id_list)","title":"\u30c6\u30b9\u30c8\u30af\u30e9\u30b9\u3092\u5b9f\u884c\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsalesforcerest-api","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_6","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u306eREST API\u3078\u30a2\u30af\u30bb\u30b9","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexclass_3","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" Run Rest API : query apexclass \"\"\" sel_string = \"Select Id, Name From ApexClass Limit 3\" params = {'q': sel_string} result = rest_api.restful('tooling/query', params) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d OrderedDict([('size', 3), ('totalSize', 3), ('done', True), ('queryLocator', None), ('entityTypeName', 'ApexClass'), ('records', [OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'OpportXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'DaoXXXXXXXXXXXXX')]), OrderedDict([('attributes', OrderedDict([('type', 'ApexClass'), ('url', '/services/data/v42.0/tooling/sobjects/ApexClass/01pXXXXXXXXXXXXX')])), ('Id', '01pXXXXXXXXXXXXX'), ('Name', 'ExiaXXXXXXXXXXXXX')])])])","title":"Apexclass\u5185\u5bb9\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#apexcodecoverage","text":"\"\"\" Run Rest API : query ApexCodeCoverage \"\"\" sel_string = \"SELECT Id, ApexTestClassId, TestMethodName, ApexClassorTriggerId, NumLinesCovered, NumLinesUncovered, Coverage FROM ApexCodeCoverage\" params = {'q': sel_string} result = rest_api.restful( path='tooling/query', params=params, method='GET' ) pprint.pprint(result)","title":"ApexCodeCoverage\u30ab\u30d0\u30fc\u7387\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#sobjects","text":"\"\"\" Run Rest API : search sobjects \"\"\" result = rest_api.call_rest( method='GET', path='/services/data/v37.0/sobjects', params={}, ) pprint.pprint(result) \u7d50\u679c\u3092\u78ba\u8a8d {'encoding': 'UTF-8', 'maxBatchSize': 200, 'sobjects': [ {'activateable': False, 'createable': True, 'custom': False, 'customSetting': False, 'deletable': True, 'deprecatedAndHidden': False, 'feedEnabled': True, 'keyPrefix': '006', 'label': 'Opportunity', 'labelPlural': 'Opportunities', 'layoutable': True, 'mergeable': False, 'mruEnabled': True, 'name': 'Opportunity', 'queryable': True, 'replicateable': True, 'retrieveable': True, 'searchable': True, 'triggerable': True, 'undeletable': True, 'updateable': True, 'urls': {'approvalLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/approvalLayouts', 'compactLayouts': '/services/data/v37.0/sobjects/Opportunity/describe/compactLayouts', 'defaultValues': '/services/data/v37.0/sobjects/Opportunity/defaultValues?recordTypeId&fields', 'describe': '/services/data/v37.0/sobjects/Opportunity/describe', 'layouts': '/services/data/v37.0/sobjects/Opportunity/describe/layouts', 'listviews': '/services/data/v37.0/sobjects/Opportunity/listviews', 'quickActions': '/services/data/v37.0/sobjects/Opportunity/quickActions', 'rowTemplate': '/services/data/v37.0/sobjects/Opportunity/{ID}', 'sobject': '/services/data/v37.0/sobjects/Opportunity'}}, ................ ................ .....\u7701\u7565....... ................ ................ ] }","title":"Sobjects\u4e00\u89a7\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsalesforce","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_7","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066\u3001DescribeMetadata\u3092\u5b9f\u884c\u3057\u3066Salesforce\u7d44\u7e54\u3092\u8aac\u660e\u3059\u308b\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002\u3053\u306e\u60c5\u5831\u306b\u306f Apex \u30af\u30e9\u30b9\u304a\u3088\u3073\u30c8\u30ea\u30ac\u3001\u30ab\u30b9\u30bf\u30e0\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u3001\u6a19\u6e96\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306e\u30ab\u30b9\u30bf\u30e0\u9805\u76ee\u3001\u30a2\u30d7\u30ea\u30b1\u30fc\u30b7\u30e7\u30f3\u3092\u5b9a\u7fa9\u3059\u308b\u30bf\u30d6\u30bb\u30c3\u30c8\u3001\u304a\u3088\u3073\u4ed6\u306e\u591a\u304f\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u578b\u304c\u542b\u307e\u308c\u3066\u3044\u307e\u3059\u3002","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#describemetadata","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\" describeMetadata : This call retrieves the metadata that describes your organization. This information includes Apex classes and triggers, custom objects, custom fields on standard objects, tab sets that define an app, and many other metadata types. \"\"\" result = meta_api.describeMetadata() pprint.pprint(result) ## print(json.dumps(result, indent=4))","title":"DescribeMetadata\u306e\u5b9f\u884c"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_7","text":"OrderedDict([('metadataObjects', [OrderedDict([('directoryName', 'installedPackages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'installedPackage'), ('xmlName', 'InstalledPackage')]), OrderedDict([('childXmlNames', 'CustomLabel'), ('directoryName', 'labels'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'labels'), ('xmlName', 'CustomLabels')]), OrderedDict([('directoryName', 'staticresources'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'resource'), ('xmlName', 'StaticResource')]), OrderedDict([('directoryName', 'scontrols'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'scf'), ('xmlName', 'Scontrol')]), OrderedDict([('directoryName', 'certs'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'crt'), ('xmlName', 'Certificate')]), OrderedDict([('directoryName', 'aura'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'AuraDefinitionBundle')]), OrderedDict([('directoryName', 'lightningcomponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('xmlName', 'LightningComponentBundle')]), OrderedDict([('directoryName', 'components'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'component'), ('xmlName', 'ApexComponent')]), OrderedDict([('directoryName', 'pages'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'page'), ('xmlName', 'ApexPage')]), OrderedDict([('directoryName', 'queues'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'queue'), ('xmlName', 'Queue')]), OrderedDict([('directoryName', 'CaseSubjectParticles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'CaseSubjectParticle'), ('xmlName', 'CaseSubjectParticle')]), OrderedDict([('directoryName', 'dataSources'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'dataSource'), ('xmlName', 'ExternalDataSource')]), OrderedDict([('directoryName', 'namedCredentials'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'namedCredential'), ('xmlName', 'NamedCredential')]), OrderedDict([('directoryName', 'externalServiceRegistrations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'externalServiceRegistration'), ('xmlName', 'ExternalServiceRegistration')]), OrderedDict([('directoryName', 'roles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'role'), ('xmlName', 'Role')]), OrderedDict([('directoryName', 'groups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'group'), ('xmlName', 'Group')]), OrderedDict([('directoryName', 'globalValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSet'), ('xmlName', 'GlobalValueSet')]), OrderedDict([('directoryName', 'standardValueSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSet'), ('xmlName', 'StandardValueSet')]), OrderedDict([('directoryName', 'customPermissions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customPermission'), ('xmlName', 'CustomPermission')]), OrderedDict([('childXmlNames', ['CustomField', 'Index', 'BusinessProcess', 'CompactLayout', 'RecordType', 'WebLink', 'ValidationRule', 'SharingReason', 'ListView', 'FieldSet']), ('directoryName', 'objects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'object'), ('xmlName', 'CustomObject')]), OrderedDict([('directoryName', 'reportTypes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'reportType'), ('xmlName', 'ReportType')]), OrderedDict([('directoryName', 'reports'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'report'), ('xmlName', 'Report')]), OrderedDict([('directoryName', 'dashboards'), ('inFolder', 'true'), ('metaFile', 'false'), ('suffix', 'dashboard'), ('xmlName', 'Dashboard')]), OrderedDict([('directoryName', 'analyticSnapshots'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'snapshot'), ('xmlName', 'AnalyticSnapshot')]), OrderedDict([('directoryName', 'feedFilters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'feedFilter'), ('xmlName', 'CustomFeedFilter')]), OrderedDict([('directoryName', 'layouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'layout'), ('xmlName', 'Layout')]), OrderedDict([('directoryName', 'documents'), ('inFolder', 'true'), ('metaFile', 'true'), ('xmlName', 'Document')]), OrderedDict([('directoryName', 'weblinks'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'weblink'), ('xmlName', 'CustomPageWebLink')]), OrderedDict([('directoryName', 'letterhead'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'letter'), ('xmlName', 'Letterhead')]), OrderedDict([('directoryName', 'email'), ('inFolder', 'true'), ('metaFile', 'true'), ('suffix', 'email'), ('xmlName', 'EmailTemplate')]), OrderedDict([('directoryName', 'quickActions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'quickAction'), ('xmlName', 'QuickAction')]), OrderedDict([('directoryName', 'flexipages'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flexipage'), ('xmlName', 'FlexiPage')]), OrderedDict([('directoryName', 'tabs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'tab'), ('xmlName', 'CustomTab')]), OrderedDict([('directoryName', 'customApplicationComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'customApplicationComponent'), ('xmlName', 'CustomApplicationComponent')]), OrderedDict([('directoryName', 'applications'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'app'), ('xmlName', 'CustomApplication')]), OrderedDict([('directoryName', 'EmbeddedServiceConfig'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceConfig'), ('xmlName', 'EmbeddedServiceConfig')]), OrderedDict([('directoryName', 'EmbeddedServiceBranding'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'EmbeddedServiceBranding'), ('xmlName', 'EmbeddedServiceBranding')]), OrderedDict([('directoryName', 'flows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flow'), ('xmlName', 'Flow')]), OrderedDict([('directoryName', 'flowDefinitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowDefinition'), ('xmlName', 'FlowDefinition')]), OrderedDict([('directoryName', 'eventSubscriptions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'subscription'), ('xmlName', 'EventSubscription')]), OrderedDict([('directoryName', 'eventDeliveries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delivery'), ('xmlName', 'EventDelivery')]), OrderedDict([('childXmlNames', ['WorkflowFieldUpdate', 'WorkflowKnowledgePublish', 'WorkflowTask', 'WorkflowAlert', 'WorkflowSend', 'WorkflowOutboundMessage', 'WorkflowRule']), ('directoryName', 'workflows'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'workflow'), ('xmlName', 'Workflow')]), OrderedDict([('childXmlNames', 'AssignmentRule'), ('directoryName', 'assignmentRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'assignmentRules'), ('xmlName', 'AssignmentRules')]), OrderedDict([('childXmlNames', 'AutoResponseRule'), ('directoryName', 'autoResponseRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'autoResponseRules'), ('xmlName', 'AutoResponseRules')]), OrderedDict([('childXmlNames', 'EscalationRule'), ('directoryName', 'escalationRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'escalationRules'), ('xmlName', 'EscalationRules')]), OrderedDict([('directoryName', 'postTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'postTemplate'), ('xmlName', 'PostTemplate')]), OrderedDict([('directoryName', 'approvalProcesses'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'approvalProcess'), ('xmlName', 'ApprovalProcess')]), OrderedDict([('directoryName', 'homePageComponents'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageComponent'), ('xmlName', 'HomePageComponent')]), OrderedDict([('directoryName', 'homePageLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'homePageLayout'), ('xmlName', 'HomePageLayout')]), OrderedDict([('directoryName', 'objectTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'objectTranslation'), ('xmlName', 'CustomObjectTranslation')]), OrderedDict([('directoryName', 'globalValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'globalValueSetTranslation'), ('xmlName', 'GlobalValueSetTranslation')]), OrderedDict([('directoryName', 'standardValueSetTranslations'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'standardValueSetTranslation'), ('xmlName', 'StandardValueSetTranslation')]), OrderedDict([('directoryName', 'classes'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'cls'), ('xmlName', 'ApexClass')]), OrderedDict([('directoryName', 'triggers'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'trigger'), ('xmlName', 'ApexTrigger')]), OrderedDict([('directoryName', 'testSuites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'testSuite'), ('xmlName', 'ApexTestSuite')]), OrderedDict([('directoryName', 'profiles'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profile'), ('xmlName', 'Profile')]), OrderedDict([('directoryName', 'permissionsets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'permissionset'), ('xmlName', 'PermissionSet')]), OrderedDict([('directoryName', 'customMetadata'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'md'), ('xmlName', 'CustomMetadata')]), OrderedDict([('directoryName', 'profilePasswordPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profilePasswordPolicy'), ('xmlName', 'ProfilePasswordPolicy')]), OrderedDict([('directoryName', 'profileSessionSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'profileSessionSetting'), ('xmlName', 'ProfileSessionSetting')]), OrderedDict([('directoryName', 'datacategorygroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'datacategorygroup'), ('xmlName', 'DataCategoryGroup')]), OrderedDict([('directoryName', 'remoteSiteSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'remoteSite'), ('xmlName', 'RemoteSiteSetting')]), OrderedDict([('directoryName', 'cspTrustedSites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cspTrustedSite'), ('xmlName', 'CspTrustedSite')]), OrderedDict([('childXmlNames', 'MatchingRule'), ('directoryName', 'matchingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'matchingRule'), ('xmlName', 'MatchingRules')]), OrderedDict([('directoryName', 'duplicateRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'duplicateRule'), ('xmlName', 'DuplicateRule')]), OrderedDict([('directoryName', 'cleanDataServices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cleanDataService'), ('xmlName', 'CleanDataService')]), OrderedDict([('directoryName', 'authproviders'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'authprovider'), ('xmlName', 'AuthProvider')]), OrderedDict([('directoryName', 'eclair'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'geodata'), ('xmlName', 'EclairGeoData')]), OrderedDict([('directoryName', 'sites'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'site'), ('xmlName', 'CustomSite')]), OrderedDict([('directoryName', 'channelLayouts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'channelLayout'), ('xmlName', 'ChannelLayout')]), OrderedDict([('directoryName', 'contentassets'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'asset'), ('xmlName', 'ContentAsset')]), OrderedDict([('childXmlNames', ['SharingOwnerRule', 'SharingCriteriaRule']), ('directoryName', 'sharingRules'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingRules'), ('xmlName', 'SharingRules')]), OrderedDict([('directoryName', 'sharingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'sharingSet'), ('xmlName', 'SharingSet')]), OrderedDict([('directoryName', 'communities'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'community'), ('xmlName', 'Community')]), OrderedDict([('directoryName', 'ChatterExtensions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'ChatterExtension'), ('xmlName', 'ChatterExtension')]), OrderedDict([('directoryName', 'callCenters'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'callCenter'), ('xmlName', 'CallCenter')]), OrderedDict([('directoryName', 'connectedApps'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'connectedApp'), ('xmlName', 'ConnectedApp')]), OrderedDict([('directoryName', 'appMenus'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'appMenu'), ('xmlName', 'AppMenu')]), OrderedDict([('directoryName', 'delegateGroups'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'delegateGroup'), ('xmlName', 'DelegateGroup')]), OrderedDict([('directoryName', 'siteDotComSites'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'site'), ('xmlName', 'SiteDotCom')]), OrderedDict([('directoryName', 'networkBranding'), ('inFolder', 'false'), ('metaFile', 'true'), ('suffix', 'networkBranding'), ('xmlName', 'NetworkBranding')]), OrderedDict([('directoryName', 'brandingSets'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'brandingSet'), ('xmlName', 'BrandingSet')]), OrderedDict([('directoryName', 'flowCategories'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'flowCategory'), ('xmlName', 'FlowCategory')]), OrderedDict([('directoryName', 'lightningBolts'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningBolt'), ('xmlName', 'LightningBolt')]), OrderedDict([('directoryName', 'lightningExperienceThemes'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'lightningExperienceTheme'), ('xmlName', 'LightningExperienceTheme')]), OrderedDict([('directoryName', 'samlssoconfigs'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'samlssoconfig'), ('xmlName', 'SamlSsoConfig')]), OrderedDict([('directoryName', 'corsWhitelistOrigins'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'corsWhitelistOrigin'), ('xmlName', 'CorsWhitelistOrigin')]), OrderedDict([('directoryName', 'actionLinkGroupTemplates'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'actionLinkGroupTemplate'), ('xmlName', 'ActionLinkGroupTemplate')]), OrderedDict([('directoryName', 'transactionSecurityPolicies'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'transactionSecurityPolicy'), ('xmlName', 'TransactionSecurityPolicy')]), OrderedDict([('directoryName', 'synonymDictionaries'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'synonymDictionary'), ('xmlName', 'SynonymDictionary')]), OrderedDict([('directoryName', 'pathAssistants'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'pathAssistant'), ('xmlName', 'PathAssistant')]), OrderedDict([('directoryName', 'LeadConvertSettings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'LeadConvertSetting'), ('xmlName', 'LeadConvertSettings')]), OrderedDict([('directoryName', 'cachePartitions'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'cachePartition'), ('xmlName', 'PlatformCachePartition')]), OrderedDict([('directoryName', 'topicsForObjects'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'topicsForObjects'), ('xmlName', 'TopicsForObjects')]), OrderedDict([('directoryName', 'emailservices'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'xml'), ('xmlName', 'EmailServicesFunction')]), OrderedDict([('directoryName', 'settings'), ('inFolder', 'false'), ('metaFile', 'false'), ('suffix', 'settings'), ('xmlName', 'Settings')])]), ('organizationNamespace', None), ('partialSaveAllowed', 'true'), ('testRequired', 'false')])","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsalesforcepackagexml","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_8","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306ePackage.xml\u3092\u4f5c\u6210","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#packagexml","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"buildPackageXml\"\"\" packagexml = meta_api.buildPackageXml() \u7d50\u679c\u78ba\u8a8d\uff1a <?xml version=\"1.0\" encoding=\"UTF-8\"?> <Package xmlns=\"http://soap.sforce.com/2006/04/metadata\"> <types> <members>*</members> <name>InstalledPackage</name> </types> <types> <members>*</members> <name>CustomLabels</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>Account</members> <members>AccountChangeEvent</members> <members>AccountCleanInfo</members> <members>AccountContactRole</members> <members>AccountFeed</members> <members>AccountHistory</members> <members>AccountPartner</members> <members>AccountShare</members> <members>ActionLinkGroupTemplate</members> <members>ActionLinkTemplate</members> <members>ActivityHistory</members> <members>AdditionalNumber</members> <members>AggregateResult</members> .................... ........\u7701\u7565......... .................... <name>CustomObject</name> </types> <types> <members>unfiled$public</members> .................... ........\u7701\u7565......... .................... <members>unfiled$public/SupportCaseAssignmentNotification</members> <members>unfiled$public/SalesNewCustomerEmail</members> <members>unfiled$public/SupportCaseCreatedWebInquiries</members> <members>unfiled$public/SupportEscalatedCaseNotification</members> <members>unfiled$public/SupportSelfServiceResetPassword</members> <members>unfiled$public/MarketingProductInquiryResponse</members> <members>unfiled$public/SupportCaseCreatedPhoneInquiries</members> <members>unfiled$public/SUPPORTSelfServiceResetPasswordSAMPLE</members> <members>unfiled$public/SupportEscalatedCaseReassignment</members> <members>unfiled$public/SUPPORTSelfServiceNewCommentNotificationSAMPLE</members> <name>EmailTemplate</name> </types> .................... ........\u7701\u7565......... .................... <types> <members>*</members> <name>TopicsForObjects</name> </types> <types> <members>*</members> <name>EmailServicesFunction</name> </types> <types> <members>*</members> <name>Settings</name> </types> <version>42.0</version> </Package>","title":"Package.xml\u306e\u4f5c\u6210"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#sfdcpackage","text":"\"\"\"packageTypeList\"\"\" print('>>>packageTypeList') pprint.pprint(meta_api.packageTypeList()) \u7d50\u679c\u78ba\u8a8d [{'members': ['*'], 'name': 'InstalledPackage'}, {'members': ['*'], 'name': 'CustomLabels'}, {'members': ['*'], 'name': 'StaticResource'}, .................... ........\u7701\u7565......... .................... {'members': ['*'], 'name': 'TopicsForObjects'}, {'members': ['*'], 'name': 'EmailServicesFunction'}, {'members': ['*'], 'name': 'Settings'}]","title":"SFDC\u7d44\u7e54\u304b\u3089Package\u95a2\u3059\u308b\u30ea\u30b9\u30c8\u3092\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonmetadata","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3057\u3066\u307f\u3088\u3046"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_9","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b\u3002 \u30e1\u30bf\u30c7\u30fc\u30bf\u306eID,\u3000Type\u3092\u53d6\u5f97\u53ef\u80fd\u3067\u3059\u3002","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#metadata","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"getAllMetadataMap\"\"\" all_metadata_map = meta_api.getAllMetadataMap() pprint.pprint(all_metadata_map)","title":"\u3059\u3079\u3066\u306eMetadata\u3092\u60c5\u5831\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_8","text":"{'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 }","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#metadata_1","text":"\"\"\"listAllMetadata \"\"\" for meta in meta_api.listAllMetadata(): pprint.pprint(meta)","title":"Metadata\u306e\u30ea\u30b9\u30c8\u3092\u53d6\u5f97\u3057\u305f\u3044\u5834\u5408"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_9","text":"\"\"\"listmeta\"\"\" query_option_list = [ { \"metadata_type\" : \"EmailFolder\", \"folder\" : \"\" }, { \"metadata_type\" : \"ApexClass\", \"folder\" : \"\" } ] listmeta_result = meta_api.listMetadata(query_option_list) print(len(listmeta_result)) for meta in listmeta_result: pprint.pprint(meta)","title":"\u6307\u5b9a\u3057\u305f\u30e1\u30bf\u30c7\u30fc\u30bf\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsalesforce_1","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_10","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066\u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_10","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"listFolder\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") pprint.pprint(folders)","title":"\u30e1\u30fc\u30eb\u30c6\u30f3\u30d7\u30ec\u30fc\u30c8\u306e\u30d5\u30a9\u30eb\u30c0\u30fc\u3092\u53d6\u5f97\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_11","text":"{'ApexClass': {'classes/A_Batch.cls': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-08-09T00:07:13.000Z'), ('fileName', 'classes/A_Batch.cls'), ('fullName', 'A_Batch'), ('id', '01pxxxxxxxxxxxxx'), ('lastModifiedById', '005xxxxxxxxxxxxx'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-08-09T00:24:29.000Z'), ('manageableState', 'unmanaged'), ('type', 'ApexClass')]), ................\u7701\u7565 'Report': { 'reports/Xy/MyID.report': OrderedDict([('createdById', '005xxxxxxxxxxxxx'), ('createdByName', 'SFDC Exia'), ('createdDate', '2010-09-15T00:29:36.000Z'), ('fileName', 'reports/Xy/MyID.report'), ('fullName', 'Xy/MyID'), ('id', '00OXXXXXXXXXXXXXX'), ('lastModifiedById', '005XXXXXXXXXXXXXX'), ('lastModifiedByName', 'SFDC Exia'), ('lastModifiedDate', '2010-09-25T00:03:33.000Z'), ('manageableState', 'unmanaged'), ('type', 'Report')]), ................\u7701\u7565 }","title":"\u7d50\u679c\u78ba\u8a8d"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_12","text":"Salesforce \u306b\u306f\u3001\u73fe\u5728\u6b21\u306e 4 \u3064\u306e\u30d5\u30a9\u30eb\u30c0\u306e\u7a2e\u985e\u304c\u3042\u308a\u307e\u3059\u3002 \u30c9\u30ad\u30e5\u30e1\u30f3\u30c8\u30d5\u30a9\u30eb\u30c0 \u30e1\u30fc\u30eb\u30d5\u30a9\u30eb\u30c0 \u30ec\u30dd\u30fc\u30c8\u30d5\u30a9\u30eb\u30c0 \u30c0\u30c3\u30b7\u30e5\u30dc\u30fc\u30c9\u30d5\u30a9\u30eb\u30c0 Four folder types currently exist in Salesforce: Document folder Email folder Report folder Dashboard folder \u53d6\u5f97\u65b9\u6cd5\uff1a \"\"\"Email folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"EmailTemplate\") \"\"\"Document folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Document\") \"\"\"Report folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Report\") \"\"\"Dashboard folder\u306e\u53d6\u5f97\"\"\" folders = meta_api.listFolder(\"Dashboard\")","title":"\u305d\u306e\u4ee5\u5916\u306e\u30d5\u30a9\u30eb\u30c0\u30fc"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepython3salesforce","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067\u305f\u3063\u305f3\u884c\u3067Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_11","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_13","text":"package.xml\u914d\u7f6e\u4e0d\u8981\u3001\u52d5\u7684\u306b\u751f\u6210 \u3059\u3079\u3066\u306eSalesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u4e00\u62ec\u3067\u53d6\u5f97","title":"\u30e1\u30ea\u30c3\u30c8"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforce","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } meta_api = MetadataApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) \"\"\"retrieve zip file\"\"\" meta_api.retrieveZip(\"./save_dir\",\"metadata-retrieve.zip\") \u7d50\u679c\u78ba\u8a8d\uff1a ls ./save_dir","title":"Salesforce\u7d44\u7e54\u304b\u3089\u306e\u30e1\u30bf\u30c7\u30fc\u30bf\u306e\u53d6\u5f97"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_14","text":"","title":"\u5206\u6790"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#_15","text":"retrieve() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3001\u975e\u540c\u671f\u7684\u306a\u53d6\u5f97\u3092\u958b\u59cb\u3059\u308b\u3068\u3001 AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304c\u8fd4\u3055\u308c\u307e\u3059\u3002 id \u9805\u76ee\u306e\u5024\u3092\u30e1\u30e2\u3057\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u3067\u4f7f\u7528\u3057\u307e\u3059\u3002 checkRetrieveStatus() \u30b3\u30fc\u30eb\u3092\u767a\u884c\u3057\u3066\u3001\u6700\u521d\u306e\u30b9\u30c6\u30c3\u30d7\u306e AsyncResult \u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u304b\u3089 id \u5024\u3092\u6e21\u3057\u307e\u3059\u3002\u8fd4\u3055\u308c\u305f RetrieveResult \u306e done \u9805\u76ee\u306e\u5024\u3092\u30c1\u30a7\u30c3\u30af\u3057\u307e\u3059\u3002true \u306e\u5834\u5408\u3001\u30b3\u30fc\u30eb\u304c\u5b8c\u4e86\u3057\u3066\u3001\u6b21\u306e\u30b9\u30c6\u30c3\u30d7\u306b\u9032\u3080\u3053\u3068\u3092\u610f\u5473\u3057\u307e\u3059\u3002\u305d\u308c\u4ee5\u5916\u306e\u5834\u5408\u306f\u3001 done \u9805\u76ee\u304c true \u306b\u306a\u308b\u307e\u3067\u3001\u3053\u306e\u30b9\u30c6\u30c3\u30d7\u3092\u7e70\u308a\u8fd4\u3057\u3066 checkRetrieveStatus() \u3092\u518d\u5ea6\u30b3\u30fc\u30eb\u3057\u307e\u3059\u3002 \u524d\u306e\u30b9\u30c6\u30c3\u30d7\u306e checkRetrieveStatus() \u3078\u306e\u6700\u5f8c\u306e\u30b3\u30fc\u30eb\u3067\u8fd4\u3055\u308c\u305f RetrieveResult \u304b\u3089 zip \u30d5\u30a1\u30a4\u30eb ( zipFile \u9805\u76ee) \u304a\u3088\u3073\u4ed6\u306e\u5fc5\u8981\u306a\u9805\u76ee\u3092\u53d6\u5f97\u3057\u307e\u3059\u3002","title":"\u30e1\u30bf\u30c7\u30fc\u30bf\u53d6\u5f97\u30ed\u30b8\u30c3\u30af"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#retrieve","text":"\u30bf\u30b9\u30af\u3092\u767a\u884c\u3059\u308b \"\"\"retrieve\"\"\" result = meta_api.startRetrieve() pprint.pprint(result) ## print(result[\"done\"]) ## print(result[\"id\"]) ## print(result[\"state\"])","title":"retrieve\u30bf\u30b9\u30af\u3092\u958b\u59cb"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#retrieve_1","text":"\u5ba3\u8a00\u7684\u306a\u30e1\u30bf\u30c7\u30fc\u30bf\u30b3\u30fc\u30eb retrieve() \u306e\u72b6\u6cc1\u3092\u78ba\u8a8d\u3057\u3001zip \u30d5\u30a1\u30a4\u30eb\u306e\u5185\u5bb9\u3092\u8fd4\u3057\u307e\u3059\u3002 \"\"\"checkRetrieveStatus\"\"\" retrieve_id = result[\"id\"] check_result = meta_api.checkRetrieveStatus(retrieve_id) pprint.pprint(check_result)","title":"retrieve\u306e\u72b6\u6cc1\u3092\u78ba\u8a8d"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforcexytoolscorepythonsalesforce_2","text":"","title":"SalesforceXyToolsCore/Python\u4e0a\u3067Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#topic_12","text":"SalesforceXyToolsCore \u3092\u4f7f\u3063\u3066Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b","title":"Topic"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#attachment","text":"User \u304c\u89aa\u30aa\u30d6\u30b8\u30a7\u30af\u30c8\u306b\u30a2\u30c3\u30d7\u30ed\u30fc\u30c9\u304a\u3088\u3073\u6dfb\u4ed8\u3057\u305f\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u3002 Body \u3092\u30d5\u30a1\u30a4\u30eb\u306b\u4fdd\u5b58\u3059\u308c\u3070\u3001\u5b8c\u4e86\u3067\u3059\u3002","title":"Attachment"},{"location":"jp/SalesforceXyToolsCore-Python-Library-For-salesforce/#salesforce_1","text":"Salesforce\u7d44\u7e54\u306e\u30e6\u30fc\u30b6\u540d\u3001\u30d1\u30b9\u30ef\u30fc\u30c9\u3001Api\u30d0\u30fc\u30b8\u30e7\u30f3\u3001Product/Sandbox\u3092\u8a2d\u5b9a\u3057\u3066\u304f\u3060\u3055\u3044\u3002 from SalesforceXytoolsCore import * import pprint config = { \"api_version\": 42.0, \"username\": \"sfdc username\", \"password\": \"sfdc password\", \"security_token\": \"\", \"is_sandbox\": True } SAVE_DIR = './attachments_download' if not os.path.exists(SAVE_DIR): os.mkdir(SAVE_DIR) rest_api = RestApi(username=config[\"username\"], password=config[\"password\"], security_token=config[\"security_token\"], sandbox=config[\"is_sandbox\"], version=config[\"api_version\"] ) attachments = rest_api.query(\"SELECT Id, Name, Body FROM Attachment LIMIT 2000\") print(\"\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570 : \" + str(len(attachments))) for attachment in attachments[\"records\"]: print(\"start to download : \" + attachment[\"Name\"]) \"\"\" Run Rest API : download attachment \"\"\" rest_path = \"/services/data/v42.0/sobjects/Attachment/{id}/Body\".format(id=attachment[\"Id\"]) result = rest_api.call_rest( method='GET', path=rest_path, params={}, ) with open(os.path.join(SAVE_DIR, attachment[\"Id\"] + \"_\" + attachment[\"Name\"]), mode='wb') as f: f.write(result.content) \u5b9f\u884c\u3059\u308c\u3070\u3001\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u4ef6\u6570\u30d5\u30a1\u30a4\u30eb\u3092\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b\u53ef\u80fd\u3067\u3059\u3002","title":"Salesforce\u7d44\u7e54\u306e\u6dfb\u4ed8\u30d5\u30a1\u30a4\u30eb\u3092\u4e00\u62ec\u30c0\u30a6\u30f3\u30ed\u30fc\u30c9\u3059\u308b"}]}